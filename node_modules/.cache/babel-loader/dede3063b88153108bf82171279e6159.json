{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Img from '../../../atoms/atImg/index.js';\nimport Div from '../../../atoms/atDiv/index.js';\nimport Layout from '../../../moleculas/layout';\nimport MoHead from '../../../moleculas/moHead';\nimport DivCodigo from '../../../atoms/atDivCodigo'; //import DivNaveg from '../../../atoms/atDivNaveg'\n\nimport * as Util from '../../../../controller/util.js';\n\nvar codigoJava = function codigoJava(props) {\n  console.log('╔════════════════════════╗');\n  console.log('║    Tutorial  SQL       ║');\n  console.log('╚════════════════════════╝');\n  var regiao = Util.validaProps(props.regiao, \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n  return React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(MoHead, {\n    modo: modo,\n    title: \"SQL\",\n    description: \"SQL\",\n    canonical: \"/tutorial/sql/\",\n    keywords: \"Banco de Dados, SQL, Select, Insert, Delete, Update, Group By\"\n  }), React.createElement(Layout, {\n    regiao: regiao,\n    modo: modo,\n    titulo: \"Tutoriais\",\n    categoria: \"Banco de Dados\"\n  }, React.createElement(Div, {\n    display: \"responcivo\"\n  }, React.createElement(\"div\", {\n    className: \"jsx-1367375073\" + \" \" + \"coluna404\"\n  }, React.createElement(\"h1\", {\n    className: \"jsx-1367375073\"\n  }, \"SQL\"), React.createElement(\"h3\", {\n    className: \"jsx-1367375073\"\n  }, \"O que \\xE9 SQL?\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"SQL, ou Structured Query Language, ou Linguagem de Consulta Estruturada, \\xE9 a linguagem de pesquisa declarativa padr\\xE3o para banco de dados relacional (base de dados relacional). As caracter\\xEDsticas originais do SQL foram inspiradas na \\xE1lgebra relacional.\"), React.createElement(\"h3\", {\n    className: \"jsx-1367375073\"\n  }, \"A linguagem:\"), React.createElement(DivCodigo, {\n    titulo: \"Adicionar um novo registro\"\n  }, \"Insert Into clientes  (nome, sobrenomes, endere\\xE7o, cidade, c\\xF3digo postal, e-mail, pedidos) Values ('Pedro', 'Palotes', 'Percebe n\\xB013', 'Londrina', '123456', 'pedro@criarweb.com', 33)\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), \"Insert Into nome_tabela (nome_campo1, nome_campo2,...) Values (valor_campo1, valor_campo2...)\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Apagar um registro\"\n  }, \"Delete From nome_tabela Where condicoes_de_selecao\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Atualizar um registro\"\n  }, \"Update clientes Set nome='Jos\\xE9' Where nome='Pedro' \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), \"Update nome_tabela Set nome_campo1 = valor_campo1, nome_campo2 = valor_campo2,... Where condicoes_de_selecao\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Sele\\xE7\\xE3o de tabelas I:\"\n  }, \"Select * From clientes\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Mostrar os clientes da cidade 'Rio de janeiro':\"\n  }, \"Select * From clientes Where cidade Like 'Rio de janeiro'\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Ordenar o resultado pelo campo nome:\"\n  }, \"Select * From clientes Where cidade Like 'Rio de janeiro' Order By nome\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Ordenar o resultado pelos campos nome e sobrenome:\"\n  }, \"Select * From clientes Where cidade Like 'Rio de Janeiro' Order By nome, sobrenome\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"\\xC9 poss\\xEDvel tamb\\xE9m usar ordem inversa:\"\n  }, \"Select * From clientes Order By pedidos Decres\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Uma op\\xE7\\xE3o interessante \\xE9 a de efetuar sele\\xE7\\xF5es sem coincid\\xEAncia. Se por exemplo, \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"busc\\xE1ssemos saber em que cidades se encontram nossos clientes sem a necessidade de que para isso apare\\xE7a v\\xE1rias vezes a mesma cidade,\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"usar\\xEDamos uma senten\\xE7a desta classe:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"sele\\xE7\\xF5es sem coincid\\xEAncia:\"\n  }, \"Ex.: Select Distinct cidade From clientes Order By cidade \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Nesta senten\\xE7a selecionamos todos os clientes de Salvador cujo nome n\\xE3o seja Jose.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Como se pode ver, empregamos Like ao inv\\xE9s de = simplesmente para evitar inconvenientes devido ao emprego ou n\\xE3o de mai\\xFAsculas.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where cidade Like 'salvador' And Not nome Like 'Jose'\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Se quis\\xE9ssemos recolher em uma sele\\xE7\\xE3o aos clientes de nossa tabela cujo sobrenome come\\xE7a por A e cujo n\\xFAmero de pedidos esteja compreendido entre 20 e 40:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where sobrenomes like 'A%' And pedidos Between 20 And 40\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"O operador In, ser\\xE1 visto mais adiante, \\xE9 muito pr\\xE1tico para consultas em v\\xE1rias tabelas. Para casos em uma \\xFAnica tabela \\xE9 empregada da seguinte forma:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where cidade In ('Salvador','Fortaleza','Florianopolis') \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Select em varias tabelas:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select clientes.sobrenomes, clientes.email From clientes,pedidos Where pedidos.data like '25/02/00' And pedidos.id_cliente= clientes.id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Select pedidos.id_pedido, artigos.titulo From pedidos, artigos Where pedidos.id_artigo=artigos.id_artigo \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Dado que o campo da fun\\xE7\\xE3o n\\xE3o existe no banco de dados, pois o estamos gerando virtualmente, isto pode criar inconvenientes quando estivermos trabalhando com nossos scripts na hora de tratar seu valor e seu nome de campo. \\xC9 por isso que o valor da fun\\xE7\\xE3o tem que ser recuperada a partir de um apelido que n\\xF3s especificaremos na senten\\xE7a SQL a partir da instru\\xE7\\xE3o AS. A coisa poderia ficar assim:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Soma(total) As soma_pedidos From pedidos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"A partir desta senten\\xE7a calculamos a soma dos valores de todos os pedidos realizados e armazenamos esse valor em um campo virtual chamado soma_pedidos que poder\\xE1 ser utilizado como qualquer outro campo por nossas p\\xE1ginas din\\xE2micas.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Obviamente, tudo que foi visto at\\xE9 agora pode ser aplicado neste tipo de fun\\xE7\\xF5es de modo que, por exemplo, podemos estabelecer condi\\xE7\\xF5es com a cl\\xE1usula Where construindo senten\\xE7as como esta:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Soma(quantidade) as soma_artigos From pedidos Where id_artigo=6\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Isto nos proporcionaria a quantidade de exemplares de um determinado livro que foram vendidos.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Outra propriedade interessante destas fun\\xE7\\xF5es \\xE9 que permitem realizar opera\\xE7\\xF5es com v\\xE1rios campos dentro de um mesmo par\\xEAnteses:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Avg(total/quantidade) From pedidos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Esta senten\\xE7a d\\xE1 como resultado o pre\\xE7o m\\xE9dio que est\\xE3o sendo vendidos os livros. Este resultado n\\xE3o tem porqu\\xEA coincidir com o do pre\\xE7o m\\xE9dio dos livros presentes no invent\\xE1rio, j\\xE1 que, pode ser que as pessoas tenham tend\\xEAncia a comprar os livros caros ou os baratos:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Avg(precio) as preco_venda From artigos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Uma cl\\xE1usula interessante no uso das fun\\xE7\\xF5es \\xE9 Group By. Esta cl\\xE1usula nos permite agrupar registros aos quais vamos aplicar a fun\\xE7\\xE3o. Podemos por exemplo calcular o dinheiro gastado por cada cliente:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"select id_cliente, Soma(total) as soma_pedidos From pedidos Group By id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Ou saber o n\\xFAmero de pedidos que foram realizados:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select id_cliente, Count(*) as numero_pedidos From pedidos Group By id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }))), React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(Img, {\n    src: \"/static/assetsv5/img/codigo/logosql.svg\",\n    width: \"200px\",\n    height: \"200px\",\n    alt: \"Logo sql\",\n    title: \"Logo sql\",\n    class: \"ClassLogosql\",\n    modo: modo\n  })))), React.createElement(_JSXStyle, {\n    id: \"1367375073\"\n  }, [\".h1.jsx-1367375073{color :#000000;}\", \".p.jsx-1367375073{color :#000000;}\"]));\n};\n\nexport default codigoJava;","map":null,"metadata":{},"sourceType":"module"}
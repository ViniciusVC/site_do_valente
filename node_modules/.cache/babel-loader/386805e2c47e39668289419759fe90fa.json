{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n// layout de Documentoscopia - Projeto Piloto\nimport React from 'react';\nimport EnviaArquivo from '../../moleculas/moBtEnviaArquivo.js';\nimport Alerta from '../../moleculas/moAlerta.js';\nimport TextoDestaque from './atTextoDestaque.js';\nimport AtCampotexto from '../../atoms/atCampoTexto/index.js';\nimport BtSubmit from '../../atoms/atBtSubmit/index.js';\nimport AtCampoInvisivel from '../../atoms/atCampoInvisivel/index.js';\nimport Captcha from '../../moleculas/moCaptcha.js';\nimport ContentCamposDoc from './contentCamposDoc.js';\nimport AtLabelCampo from './atLabelCampo.js'; //import Compress from 'compress.js';\n//console.log('Instanciando /componentes/organisms/documentoscopia/ContentAbaC.js');\n\nvar ContentAbaC = function ContentAbaC(props) {\n  //console.log('Rodando /componentes/organisms/documentoscopia/ContentAbaC.js');\n  //console.log(props.query);\n  var modo = \"html\";\n\n  if (props.modo != undefined) {\n    modo = props.modo;\n  }\n\n  ;\n  var camposValidados = true;\n  var MenssagemValida = \" campos\";\n  var cpf = \"000000\";\n\n  if (props.query.cpf != undefined) {\n    cpf = props.query.cpf;\n  } else {\n    camposValidados = false;\n    MenssagemValida += \", CPF\";\n  }\n\n  ;\n  var tipoDocumento = \"Outros\";\n\n  if (props.query.tipoDocumento != undefined && props.query.tipoDocumento != \"\") {\n    tipoDocumento = props.query.tipoDocumento;\n  } else {\n    camposValidados = false;\n    MenssagemValida += \", tipo de documento \";\n  }\n\n  ;\n\n  function enviar() {\n    //const compress = new Compress()\n    document.getElementById(\"divAlertaErro\").style.display = \"block\";\n    document.getElementById(\"AlertaErroInf\").innerHTML = \"Preparando para enviar...\";\n    var mensagemFinal = \"\"; //mensagemFinal += validaImagens(nomeDasImagens);\n\n    mensagemFinal += validaCampos();\n    console.log(document.getElementById('formdocumentoscopia'));\n\n    if (mensagemFinal == \"\") {\n      if (tipoDocumento == \"identidade\") {\n        document.getElementById('Selfie').disabled = \"true\";\n        document.getElementById('imgdoc2').disabled = \"true\";\n        document.getElementById('imgdoc3').disabled = \"true\";\n        document.getElementById('imgdoc4').disabled = \"true\";\n      } else {\n        document.getElementById('Selfie').disabled = \"true\";\n        document.getElementById('imgdoc2').disabled = \"true\";\n      }\n\n      document.getElementById('formdocumentoscopia').submit();\n    } else {\n      //alert(mensagem);\n      document.getElementById(\"AlertaErroInf\").innerHTML = mensagemFinal;\n    } //})\n\n  } // function validaImagens(nomeDasImagens){\n  //   var tamanhoTotal = 0;\n  //   //for(var i = 0; i < tamanhoTotal.length; i++){\n  //     tamanhoTotal += tamanhosImg(nomeDasImagens[0]);\n  //     tamanhoTotal += tamanhosImg(nomeDasImagens[1]);\n  //     tamanhoTotal += tamanhosImg(nomeDasImagens[2]);\n  //     tamanhoTotal += tamanhosImg(nomeDasImagens[3]);\n  //   //}\n  //   //if(tamanhoTotal>3900000){\n  //   if(tamanhoTotal>15900000){\n  //     var TotalMB =  Math.trunc(tamanhoTotal/1000000);\n  //     if(TotalMB<5){\n  //       TotalMB=5;\n  //     }\n  //     //var nota = \"<br/>Selfie=\" + tamanhosImg('Selfie') + \"<br/>imgdoc2=\" + tamanhosImg('imgdoc2') + \"<br/>imgdoc3=\" + tamanhosImg('imgdoc3')+\" <br/>imgdoc4=\" + tamanhosImg('imgdoc4');\n  //     //nota = nota + \"<br/>tamanhoTotal=\" + tamanhoTotal + \"<br/>arredondado=\" + TotalMB\n  //     return \"Tamanho total das imagens não pode ser maior que 4 Megabytes. <br/>O peso atual das imagens está em \" + TotalMB + \" Megabytes.<br/>\";\n  //   }else{\n  //     //\"Tamanho total das imagens está ok. O peso atual das imagens está em \" + TotalMB + \" Megabytes.\"\n  //     return \"\";\n  //   }\n  // }\n\n\n  function tamanhosImg(idimg) {\n    if (document.getElementById(idimg) != undefined) {\n      if (document.getElementById(idimg).value != \"\") {\n        return document.getElementById(idimg).files[0].size;\n      } else {\n        return 0;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  function campObrigatorio(idcampo, nomeCampo) {\n    if (document.getElementById(idcampo) != undefined) {\n      if (document.getElementById(idcampo).value == \"\") {\n        return \"Campo \" + nomeCampo + \" é obrigatório.<br/><br/>\";\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  function validaCampos() {\n    var mensagemC = \"\";\n    mensagemC += campObrigatorio('Selfie', 'Selfie (Sua foto)');\n    mensagemC += campObrigatorio('imgdoc2', 'Frente do Documento');\n    mensagemC += campObrigatorio('imgdoc3', 'Foto Verso');\n    mensagemC += campObrigatorio('imgdoc4', 'Foto CPF');\n    mensagemC += campObrigatorio('codigo', 'Codigo de Verificação');\n    return mensagemC;\n  }\n\n  if (camposValidados) {\n    return React.createElement(\"div\", {\n      className: \"jsx-1577883438\"\n    }, React.createElement(\"form\", {\n      action: \"/api1/meusdocumentos/\",\n      method: \"post\",\n      id: \"formdocumentoscopia\",\n      name: \"formdocumentoscopia\",\n      encType: \"multipart/form-data\",\n      className: \"jsx-1577883438\"\n    }, React.createElement(TextoDestaque, {\n      texto: \"Selfie ( Foto da c\\xE2mera ou \\xE1lbum )\"\n    }), React.createElement(AtLabelCampo, {\n      for: \"imgdoc2\",\n      value: \"Foto de rosto\"\n    }), React.createElement(EnviaArquivo, {\n      id: \"Selfie\",\n      name: \"Selfie\",\n      value: \"Frente de documento\",\n      img: \"../static/assetsv5/img/documentoscopia/foto.jpg\",\n      modo: modo\n    }), React.createElement(TextoDestaque, {\n      texto: \"Agora \\xE9 s\\xF3 adicionar os documentos abaixo:\"\n    }), React.createElement(ContentCamposDoc, {\n      tipoDocumento: tipoDocumento,\n      modo: modo\n    }), React.createElement(AtLabelCampo, {\n      for: \"imgdoc4\",\n      value: \"Envie fotos legiveis dos seus documentos. O peso total das imagens n\\xE3o deve ultrapassar 4 MB.\"\n    }), React.createElement(TextoDestaque, {\n      texto: \"Digite o c\\xF3digo abaixo\"\n    }), React.createElement(\"div\", {\n      className: \"jsx-1577883438\" + \" \" + \"grupodecampos\"\n    }, React.createElement(Captcha, {\n      modo: modo,\n      sessao: cpf\n    }), React.createElement(AtCampotexto, {\n      type: \"text\",\n      id: \"codigo\",\n      name: \"codigo\",\n      autocomplete: \"off\",\n      placeholder: \"Texto de verifica\\xE7\\xE3o\"\n    })), React.createElement(\"span\", {\n      id: \"erro\",\n      className: \"jsx-1577883438\"\n    }), React.createElement(\"a\", {\n      onClick: function onClick() {\n        enviar();\n      },\n      className: \"jsx-1577883438\" + \" \" + \"btLinklaranja\"\n    }, \"Enviar\"), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"cpf\",\n      name: \"cpf\",\n      value: cpf\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"tipoDocumento\",\n      name: \"tipoDocumento\",\n      value: tipoDocumento\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"passo\",\n      name: \"passo\",\n      value: \"4\"\n    })), React.createElement(Alerta, {\n      modo: modo\n    }), React.createElement(_JSXStyle, {\n      id: \"1577883438\"\n    }, [\".btLinklaranja.jsx-1577883438{font-family:oiTextRegular,sans-serif;background-color:#f8562c;background-image:linear-gradient(260deg,#fb851c,#f8562c);border-radius:6px;color:#ffffff;display:block;font-size:16px;height:3.2rem;text-align:center;width:280px;-webkit-text-decoration:none;text-decoration:none;border-bottom:solid 1px #dbdbdb;cursor:pointer;outline:0;margin:0;margin:10px;padding:1.2rem;box-sizing:border-box;font-style:normal;-webkit-transition-duration:1s;transition-duration:1s;}\", \".btLinklaranja.jsx-1577883438:hover{-webkit-transition-duration:1s;transition-duration:1s;color:#f8562c;border:solid 1px #fb851c;background-color:#ffffff;background-image:none;}\"]));\n  } else {\n    return React.createElement(\"form\", {\n      action: \"/meusdocumentos/\",\n      method: \"get\",\n      id: \"formdocumentoscopia\",\n      name: \"formdocumentoscopia\",\n      encType: \"multipart/form-data\"\n    }, React.createElement(TextoDestaque, {\n      texto: \"Volte a etapa anterior e preencha o \" + MenssagemValida + \" , corretamente.\"\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"cpf\",\n      name: \"cpf\",\n      value: cpf\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"tipoDocumento\",\n      name: \"tipoDocumento\",\n      value: tipoDocumento\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"passo\",\n      name: \"passo\",\n      value: \"1\"\n    }), React.createElement(BtSubmit, {\n      value: \"Voltar\"\n    }));\n  }\n};\n\nexport default ContentAbaC;","map":null,"metadata":{},"sourceType":"module"}
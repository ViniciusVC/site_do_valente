{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Img from '../../../atoms/atImg/index.js';\nimport Div from '../../../atoms/atDiv/index.js';\nimport BtLink from '../../../atoms/atBtLink';\nimport Layout from '../../../moleculas/layout';\nimport MoHead from '../../../moleculas/moHead'; //import DivCodigo from '../../../atoms/atDivCodigo'\n//import DivNaveg from '../../../atoms/atDivNaveg'\n\nimport * as Util from '../../../../controller/util.js';\n\nvar codigoJava = function codigoJava(props) {\n  console.log('╔═══════════════════════════╗');\n  console.log('║ Tutorial - Banco de Dados ║');\n  console.log('╚═══════════════════════════╝');\n  var regiao = Util.validaProps(props.regiao, \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n  return React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(MoHead, {\n    modo: modo,\n    title: \"Banco de Dados\",\n    description: \"O que \\xE9 um Banco de Dados\",\n    canonical: \"/tutorial/bancodedados/\",\n    keywords: \"Banco de Dados, bigdata, tutorial, Relacionais, JSON, Chave-Valor\"\n  }), React.createElement(Layout, {\n    regiao: regiao,\n    modo: modo,\n    titulo: \"Tutoriais\",\n    categoria: \"Banco de Dados\"\n  }, React.createElement(Div, {\n    display: \"responcivo\"\n  }, React.createElement(\"div\", {\n    className: \"jsx-1367375073\" + \" \" + \"coluna404\"\n  }, React.createElement(\"h1\", {\n    className: \"jsx-1367375073\"\n  }, \"O que \\xE9 um Banco de Dados?\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"Bancos de dados ou bases de dados s\\xE3o conjuntos de arquivos relacionados entre si com registros sobre pessoas, lugares ou coisas.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"S\\xE3o cole\\xE7\\xF5es organizadas de dados que se relacionam de forma a criar algum sentido (Informa\\xE7\\xE3o) e dar mais efici\\xEAncia durante uma pesquisa ou estudo cientifico.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Bancos de dados podem ser relacionais ou n\\xE3o relacionais.\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"Relacionais:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Cada tabela em um banco de dados relacional cont\\xE9m um ou mais dados em colunas, e cada linha, tamb\\xE9m chamada de registro, cont\\xE9m uma inst\\xE2ncia exclusiva de dados ou chave para os dados definidos pelas colunas. Cada tabela normalmente possui uma coluna de chave prim\\xE1ria, um registro \\xFAnico dentro da tabela para identificar os registros. O relacionamento entre tabelas pode ser definido atrav\\xE9s do uso de chaves estrangeiras \\u2013 um campo em uma tabela que se vincula \\xE0 chave prim\\xE1ria de outra tabela.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Bancos de dados relacionais utilis\\xE3o SQL.\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"N\\xE3o Relacionais:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Existem diversos tipos de banco de dados n\\xE3o relacional, eles s\\xE3o categorizadas pela sua maneira de armazenamento de dados.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Os dois tipos mais utilizados de bancos NoSQL s\\xE3o:\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"Banco de Documentos:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Armazena seus dados em documentos semelhantes aos objetos JSON (JavaScript Object Notation).\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"Chave-Valor:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"S\\xE3o um tipo mais \\u201Csimples\\u201D de banco de dados, em que cada item cont\\xE9m chaves e valores. Esses valores podem ser qualquer tipo de dado, um texto, um n\\xFAmero, um JSON e eles podem ser recuperados fazendo refer\\xEAncia a sua chave, fazendo com que sua consulta seja muito simples. Esses bancos s\\xE3o \\xF3timos para quando voc\\xEA precisa armazenar grandes quantidades de dados, mas n\\xE3o precisa executar consultas complexas neles. Os usos mais comuns s\\xE3o \\u200B\\u200Bpara armazenamento de dados em cache. Redis e DynanoDB s\\xE3o provavelmente os bancos mais populares desse tipo.\")), React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(Img, {\n    src: \"/static/assetsv5/img/codigo/bancodedados.jpeg\",\n    width: \"200px\",\n    height: \"200px\",\n    alt: \"Logo bancodedados\",\n    title: \"Logo bancodedados\",\n    class: \"ClassLogobancodedados\",\n    modo: modo\n  }), React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, \"Veja tambem:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(BtLink, {\n    href: \"/tutorial/bancodedados/hadoop/?regiao=\" + regiao,\n    value: \"Big Data\",\n    estilo: \"neon\"\n  }))))), React.createElement(_JSXStyle, {\n    id: \"1367375073\"\n  }, \".h1.jsx-1367375073{color :#000000;}.p.jsx-1367375073{color :#000000;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL29pNDAyODI1L0RvY3VtZW50b3MvUHJvamV0b3Mvc2l0ZV9kb192YWxlbnRlL2NvbXBvbmVudHMvdGVtcGxhdGVzL2NvZGlnby9iYW5jb2RlZGFkb3MvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVrQixBQUcwQixBQUdBLGVBRmpCLEFBR0EiLCJmaWxlIjoiL2hvbWUvb2k0MDI4MjUvRG9jdW1lbnRvcy9Qcm9qZXRvcy9zaXRlX2RvX3ZhbGVudGUvY29tcG9uZW50cy90ZW1wbGF0ZXMvY29kaWdvL2JhbmNvZGVkYWRvcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBJbWcgZnJvbSAnLi4vLi4vLi4vYXRvbXMvYXRJbWcvaW5kZXguanMnXG5pbXBvcnQgRGl2IGZyb20gJy4uLy4uLy4uL2F0b21zL2F0RGl2L2luZGV4LmpzJ1xuaW1wb3J0IEJ0TGluayBmcm9tICcuLi8uLi8uLi9hdG9tcy9hdEJ0TGluaydcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vLi4vbW9sZWN1bGFzL2xheW91dCdcbmltcG9ydCBNb0hlYWQgZnJvbSAnLi4vLi4vLi4vbW9sZWN1bGFzL21vSGVhZCdcbi8vaW1wb3J0IERpdkNvZGlnbyBmcm9tICcuLi8uLi8uLi9hdG9tcy9hdERpdkNvZGlnbydcbi8vaW1wb3J0IERpdk5hdmVnIGZyb20gJy4uLy4uLy4uL2F0b21zL2F0RGl2TmF2ZWcnXG5pbXBvcnQgKiBhcyBVdGlsIGZyb20gJy4uLy4uLy4uLy4uL2NvbnRyb2xsZXIvdXRpbC5qcyc7XG5cbmNvbnN0IGNvZGlnb0phdmEgPSBmdW5jdGlvbiAocHJvcHMpIHtcblxuICBjb25zb2xlLmxvZygn4pWU4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWXJyk7XG4gIGNvbnNvbGUubG9nKCfilZEgVHV0b3JpYWwgLSBCYW5jbyBkZSBEYWRvcyDilZEnKTtcbiAgY29uc29sZS5sb2coJ+KVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnScpO1xuXG4gIHZhciByZWdpYW8gPSBVdGlsLnZhbGlkYVByb3BzKHByb3BzLnJlZ2lhbyAsIFwiUkpcIik7XG4gIHZhciBtb2RvID0gVXRpbC52YWxpZGFQcm9wcyhwcm9wcy5tb2RvLCBcImh0bWxcIik7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPE1vSGVhZCBcbiAgICAgICAgbW9kbz17bW9kb30gXG4gICAgICAgIHRpdGxlPVwiQmFuY28gZGUgRGFkb3NcIiBcbiAgICAgICAgZGVzY3JpcHRpb249XCJPIHF1ZSDDqSB1bSBCYW5jbyBkZSBEYWRvc1wiIFxuICAgICAgICBjYW5vbmljYWw9XCIvdHV0b3JpYWwvYmFuY29kZWRhZG9zL1wiXG4gICAgICAgIGtleXdvcmRzPVwiQmFuY28gZGUgRGFkb3MsIGJpZ2RhdGEsIHR1dG9yaWFsLCBSZWxhY2lvbmFpcywgSlNPTiwgQ2hhdmUtVmFsb3JcIlxuICAgICAgICAvPlxuICAgICAgPExheW91dCByZWdpYW89e3JlZ2lhb30gbW9kbz17bW9kb30gdGl0dWxvPVwiVHV0b3JpYWlzXCIgY2F0ZWdvcmlhPVwiQmFuY28gZGUgRGFkb3NcIj5cbiAgICAgICAgPERpdiBkaXNwbGF5PVwicmVzcG9uY2l2b1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sdW5hNDA0XCI+XG4gICAgICAgICAgICA8aDE+TyBxdWUgw6kgdW0gQmFuY28gZGUgRGFkb3M/PC9oMT5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBCYW5jb3MgZGUgZGFkb3Mgb3UgYmFzZXMgZGUgZGFkb3Mgc8OjbyBjb25qdW50b3MgZGUgYXJxdWl2b3MgcmVsYWNpb25hZG9zIGVudHJlIHNpIGNvbSByZWdpc3Ryb3Mgc29icmUgcGVzc29hcywgbHVnYXJlcyBvdSBjb2lzYXMuPGJyLz5cbiAgICAgICAgICAgICAgU8OjbyBjb2xlw6fDtWVzIG9yZ2FuaXphZGFzIGRlIGRhZG9zIHF1ZSBzZSByZWxhY2lvbmFtIGRlIGZvcm1hIGEgY3JpYXIgYWxndW0gc2VudGlkbyAoSW5mb3JtYcOnw6NvKSBlIGRhciBtYWlzIGVmaWNpw6puY2lhIGR1cmFudGUgdW1hIHBlc3F1aXNhIG91IGVzdHVkbyBjaWVudGlmaWNvLjxici8+XG4gICAgICAgICAgICAgIEJhbmNvcyBkZSBkYWRvcyBwb2RlbSBzZXIgcmVsYWNpb25haXMgb3UgbsOjbyByZWxhY2lvbmFpcy4gXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgUmVsYWNpb25haXM6PGJyLz5cbiAgICAgICAgICAgICAgQ2FkYSB0YWJlbGEgZW0gdW0gYmFuY28gZGUgZGFkb3MgcmVsYWNpb25hbCBjb250w6ltIHVtIG91IG1haXMgZGFkb3MgZW0gY29sdW5hcywgZSBjYWRhIGxpbmhhLCB0YW1iw6ltIGNoYW1hZGEgZGUgcmVnaXN0cm8sIGNvbnTDqW0gdW1hIGluc3TDom5jaWEgZXhjbHVzaXZhIGRlIGRhZG9zIG91IGNoYXZlIHBhcmEgb3MgZGFkb3MgZGVmaW5pZG9zIHBlbGFzIGNvbHVuYXMuIENhZGEgdGFiZWxhIG5vcm1hbG1lbnRlIHBvc3N1aSB1bWEgY29sdW5hIGRlIGNoYXZlIHByaW3DoXJpYSwgdW0gcmVnaXN0cm8gw7puaWNvIGRlbnRybyBkYSB0YWJlbGEgcGFyYSBpZGVudGlmaWNhciBvcyByZWdpc3Ryb3MuIE8gcmVsYWNpb25hbWVudG8gZW50cmUgdGFiZWxhcyBwb2RlIHNlciBkZWZpbmlkbyBhdHJhdsOpcyBkbyB1c28gZGUgY2hhdmVzIGVzdHJhbmdlaXJhcyDigJMgdW0gY2FtcG8gZW0gdW1hIHRhYmVsYSBxdWUgc2UgdmluY3VsYSDDoCBjaGF2ZSBwcmltw6FyaWEgZGUgb3V0cmEgdGFiZWxhLjxici8+XG4gICAgICAgICAgICAgIEJhbmNvcyBkZSBkYWRvcyByZWxhY2lvbmFpcyB1dGlsaXPDo28gU1FMLiBcbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBOw6NvIFJlbGFjaW9uYWlzOjxici8+XG4gICAgICAgICAgICAgIEV4aXN0ZW0gZGl2ZXJzb3MgdGlwb3MgZGUgYmFuY28gZGUgZGFkb3MgbsOjbyByZWxhY2lvbmFsLCBlbGVzIHPDo28gY2F0ZWdvcml6YWRhcyBwZWxhIHN1YSBtYW5laXJhIGRlIGFybWF6ZW5hbWVudG8gZGUgZGFkb3MuPGJyLz5cbiAgICAgICAgICAgICAgT3MgZG9pcyB0aXBvcyBtYWlzIHV0aWxpemFkb3MgZGUgYmFuY29zIE5vU1FMIHPDo286XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgQmFuY28gZGUgRG9jdW1lbnRvczo8YnIvPlxuICAgICAgICAgICAgICBBcm1hemVuYSBzZXVzIGRhZG9zIGVtIGRvY3VtZW50b3Mgc2VtZWxoYW50ZXMgYW9zIG9iamV0b3MgSlNPTiAoSmF2YVNjcmlwdCBPYmplY3QgTm90YXRpb24pLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIENoYXZlLVZhbG9yOjxici8+XG4gICAgICAgICAgICAgIFPDo28gdW0gdGlwbyBtYWlzIOKAnHNpbXBsZXPigJ0gZGUgYmFuY28gZGUgZGFkb3MsIGVtIHF1ZSBjYWRhIGl0ZW0gY29udMOpbSBjaGF2ZXMgZSB2YWxvcmVzLlxuICAgICAgICAgICAgICBFc3NlcyB2YWxvcmVzIHBvZGVtIHNlciBxdWFscXVlciB0aXBvIGRlIGRhZG8sIHVtIHRleHRvLCB1bSBuw7ptZXJvLCB1bSBKU09OIGUgZWxlcyBwb2RlbSBzZXIgcmVjdXBlcmFkb3MgZmF6ZW5kbyByZWZlcsOqbmNpYSBhIHN1YSBjaGF2ZSwgZmF6ZW5kbyBjb20gcXVlIHN1YSBjb25zdWx0YSBzZWphIG11aXRvIHNpbXBsZXMuIEVzc2VzIGJhbmNvcyBzw6NvIMOzdGltb3MgcGFyYSBxdWFuZG8gdm9jw6ogcHJlY2lzYSBhcm1hemVuYXIgZ3JhbmRlcyBxdWFudGlkYWRlcyBkZSBkYWRvcywgbWFzIG7Do28gcHJlY2lzYSBleGVjdXRhciBjb25zdWx0YXMgY29tcGxleGFzIG5lbGVzLiBcbiAgICAgICAgICAgICAgT3MgdXNvcyBtYWlzIGNvbXVucyBzw6NvIOKAi+KAi3BhcmEgYXJtYXplbmFtZW50byBkZSBkYWRvcyBlbSBjYWNoZS4gXG4gICAgICAgICAgICAgIFJlZGlzIGUgRHluYW5vREIgc8OjbyBwcm92YXZlbG1lbnRlIG9zIGJhbmNvcyBtYWlzIHBvcHVsYXJlcyBkZXNzZSB0aXBvLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8SW1nIFxuICAgICAgICAgICAgICAgICAgc3JjPVwiL3N0YXRpYy9hc3NldHN2NS9pbWcvY29kaWdvL2JhbmNvZGVkYWRvcy5qcGVnXCJcbiAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMjAwcHhcIlxuICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiMjAwcHhcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiTG9nbyBiYW5jb2RlZGFkb3NcIlxuICAgICAgICAgICAgICAgICAgdGl0bGU9XCJMb2dvIGJhbmNvZGVkYWRvc1wiXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cIkNsYXNzTG9nb2JhbmNvZGVkYWRvc1wiXG4gICAgICAgICAgICAgICAgICBtb2RvPXttb2RvfT5cbiAgICAgICAgICAgIDwvSW1nPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgVmVqYSB0YW1iZW06PGJyLz5cbiAgICAgICAgICAgICAgPEJ0TGluayBocmVmPXtcIi90dXRvcmlhbC9iYW5jb2RlZGFkb3MvaGFkb29wLz9yZWdpYW89XCIrcmVnaWFvfSB2YWx1ZT1cIkJpZyBEYXRhXCIgZXN0aWxvPVwibmVvblwiLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0Rpdj5cbiAgICAgIDwvTGF5b3V0PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuaDF7XG4gICAgICAgICAgY29sb3IgOiAjMDAwMDAwO1xuICAgICAgICB9XG4gICAgICAgIC5we1xuICAgICAgICAgIGNvbG9yIDogIzAwMDAwMDtcbiAgICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBjb2RpZ29KYXZhXG4iXX0= */\\n/*@ sourceURL=/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/codigo/bancodedados/index.js */\"));\n};\n\nexport default codigoJava;","map":{"version":3,"sources":["/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/codigo/bancodedados/index.js"],"names":["React","Img","Div","BtLink","Layout","MoHead","Util","codigoJava","props","console","log","regiao","validaProps","modo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;AACA;;AACA,OAAO,KAAKC,IAAZ,MAAsB,gCAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAUC,KAAV,EAAiB;AAElCC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEA,MAAIC,MAAM,GAAGL,IAAI,CAACM,WAAL,CAAiBJ,KAAK,CAACG,MAAvB,EAAgC,IAAhC,CAAb;AACA,MAAIE,IAAI,GAAGP,IAAI,CAACM,WAAL,CAAiBJ,KAAK,CAACK,IAAvB,EAA6B,MAA7B,CAAX;AAEA,SACE;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,WAAW,EAAC,8BAHd;AAIE,IAAA,SAAS,EAAC,yBAJZ;AAKE,IAAA,QAAQ,EAAC;AALX,IADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEF,MAAhB;AAAwB,IAAA,IAAI,EAAEE,IAA9B;AAAoC,IAAA,MAAM,EAAC,WAA3C;AAAuD,IAAA,SAAS,EAAC;AAAjE,KACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC;AAAb,KACE;AAAA,wCAAe;AAAf,KACE;AAAA;AAAA,qCADF,EAEE;AAAA;AAAA,6IACmI;AAAA;AAAA,IADnI,wLAEkK;AAAA;AAAA,IAFlK,iEAFF,EAOE;AAAA;AAAA,qBACc;AAAA;AAAA,IADd,uhBAEmf;AAAA;AAAA,IAFnf,iDAPF,EAYE;AAAA;AAAA,4BACkB;AAAA;AAAA,IADlB,uIAE6H;AAAA;AAAA,IAF7H,0DAZF,EAiBE;AAAA;AAAA,6BACsB;AAAA;AAAA,IADtB,iGAjBF,EAqBE;AAAA;AAAA,qBACc;AAAA;AAAA,IADd,6lBArBF,CADF,EA8BE;AAAA;AAAA,KACE,oBAAC,GAAD;AACM,IAAA,GAAG,EAAC,+CADV;AAEM,IAAA,KAAK,EAAC,OAFZ;AAGM,IAAA,MAAM,EAAC,OAHb;AAIM,IAAA,GAAG,EAAC,mBAJV;AAKM,IAAA,KAAK,EAAC,mBALZ;AAMM,IAAA,KAAK,EAAC,uBANZ;AAOM,IAAA,IAAI,EAAEA;AAPZ,IADF,EAUE;AAAA;AAAA,qBACc;AAAA;AAAA,IADd,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,2CAAyCF,MAAvD;AAA+D,IAAA,KAAK,EAAC,UAArE;AAAgF,IAAA,MAAM,EAAC;AAAvF,IAFF,CAVF,CA9BF,CADF,CARF;AAAA;AAAA,s/MADF;AAmED,CA5ED;;AA8EA,eAAeJ,UAAf","sourcesContent":["import React from 'react'\nimport Img from '../../../atoms/atImg/index.js'\nimport Div from '../../../atoms/atDiv/index.js'\nimport BtLink from '../../../atoms/atBtLink'\nimport Layout from '../../../moleculas/layout'\nimport MoHead from '../../../moleculas/moHead'\n//import DivCodigo from '../../../atoms/atDivCodigo'\n//import DivNaveg from '../../../atoms/atDivNaveg'\nimport * as Util from '../../../../controller/util.js';\n\nconst codigoJava = function (props) {\n\n  console.log('╔═══════════════════════════╗');\n  console.log('║ Tutorial - Banco de Dados ║');\n  console.log('╚═══════════════════════════╝');\n\n  var regiao = Util.validaProps(props.regiao , \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n\n  return (\n    <div>\n      <MoHead \n        modo={modo} \n        title=\"Banco de Dados\" \n        description=\"O que é um Banco de Dados\" \n        canonical=\"/tutorial/bancodedados/\"\n        keywords=\"Banco de Dados, bigdata, tutorial, Relacionais, JSON, Chave-Valor\"\n        />\n      <Layout regiao={regiao} modo={modo} titulo=\"Tutoriais\" categoria=\"Banco de Dados\">\n        <Div display=\"responcivo\">\n          <div className=\"coluna404\">\n            <h1>O que é um Banco de Dados?</h1>\n            <p>\n              Bancos de dados ou bases de dados são conjuntos de arquivos relacionados entre si com registros sobre pessoas, lugares ou coisas.<br/>\n              São coleções organizadas de dados que se relacionam de forma a criar algum sentido (Informação) e dar mais eficiência durante uma pesquisa ou estudo cientifico.<br/>\n              Bancos de dados podem ser relacionais ou não relacionais. \n            </p>\n            <p>\n              Relacionais:<br/>\n              Cada tabela em um banco de dados relacional contém um ou mais dados em colunas, e cada linha, também chamada de registro, contém uma instância exclusiva de dados ou chave para os dados definidos pelas colunas. Cada tabela normalmente possui uma coluna de chave primária, um registro único dentro da tabela para identificar os registros. O relacionamento entre tabelas pode ser definido através do uso de chaves estrangeiras – um campo em uma tabela que se vincula à chave primária de outra tabela.<br/>\n              Bancos de dados relacionais utilisão SQL. \n            </p>\n            <p>\n              Não Relacionais:<br/>\n              Existem diversos tipos de banco de dados não relacional, eles são categorizadas pela sua maneira de armazenamento de dados.<br/>\n              Os dois tipos mais utilizados de bancos NoSQL são:\n            </p>\n            <p>\n              Banco de Documentos:<br/>\n              Armazena seus dados em documentos semelhantes aos objetos JSON (JavaScript Object Notation).\n            </p>\n            <p>\n              Chave-Valor:<br/>\n              São um tipo mais “simples” de banco de dados, em que cada item contém chaves e valores.\n              Esses valores podem ser qualquer tipo de dado, um texto, um número, um JSON e eles podem ser recuperados fazendo referência a sua chave, fazendo com que sua consulta seja muito simples. Esses bancos são ótimos para quando você precisa armazenar grandes quantidades de dados, mas não precisa executar consultas complexas neles. \n              Os usos mais comuns são ​​para armazenamento de dados em cache. \n              Redis e DynanoDB são provavelmente os bancos mais populares desse tipo.\n            </p>\n          </div>\n          <div>\n            <Img \n                  src=\"/static/assetsv5/img/codigo/bancodedados.jpeg\"\n                  width=\"200px\"\n                  height=\"200px\"\n                  alt=\"Logo bancodedados\"\n                  title=\"Logo bancodedados\"\n                  class=\"ClassLogobancodedados\"\n                  modo={modo}>\n            </Img>\n            <div>\n              Veja tambem:<br/>\n              <BtLink href={\"/tutorial/bancodedados/hadoop/?regiao=\"+regiao} value=\"Big Data\" estilo=\"neon\"/>\n            </div>\n          </div>\n        </Div>\n      </Layout>\n      <style jsx>{`\n        .h1{\n          color : #000000;\n        }\n        .p{\n          color : #000000;\n        }\n    `}</style>\n    </div>\n  )\n}\n\nexport default codigoJava\n"]},"metadata":{},"sourceType":"module"}
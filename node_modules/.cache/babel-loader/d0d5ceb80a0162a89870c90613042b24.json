{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\n\nvar orgTanque = function orgTanque(props) {\n  console.log(' component - orgConvertUnidade ');\n\n  function converter() {\n    var numero = document.getElementById('impMedidaPre').value;\n    var medidaInit = document.getElementById('selMedidaPre').value;\n    var medidaFinal = document.getElementById('selMedidaPos').value;\n\n    if (medidaInit != medidaFinal) {\n      if (medidaInit == \"Quilômetros\") {\n        //1 metro = 0,001 Quilômetros\n        numero = numero * 1000;\n      } else if (medidaInit == \"centimetros\") {\n        //1 metro = 100 centimetros\n        numero = numero / 100;\n      } else if (medidaInit == \"Milímetros\") {\n        //1 metro = 1000 Milímetros\n        numero = numero / 1000;\n      } else if (medidaInit == \"Micrômetros\") {\n        //1 metro = 1e+6 Micrômetros\n        numero = numero / 1e+6;\n      } else if (medidaInit == \"Nanômetros\") {\n        //1 metro = 1e+9 Nanômetros\n        numero = numero / 1e+9;\n      } else if (medidaInit == \"Milhas\") {\n        //1 metro = 0,000621371 Milhas\n        numero = numero * 1609;\n      } else if (medidaInit == \"Jardas\") {\n        //1 metro = 1,09361 Jardas\n        numero = numero / 1.094;\n      } else if (medidaInit == \"pés\") {\n        //1 metro = 3,28084 pés\n        numero = numero / 3.281;\n      } else if (medidaInit == \"polegada\") {\n        //1 metro = 39,37008 polegada\n        numero = numero / 39.37;\n      } else if (medidaInit == \"milha nautica\") {\n        //1 metro = 0,000539957 milha nautica\n        numero = numero * 1852;\n      }\n\n      ;\n\n      if (medidaFinal == \"Quilômetros\") {\n        //1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n        numero = numero / 1000;\n      } else if (medidaFinal == \"centimetros\") {\n        //1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n        numero = numero * 100;\n      } else if (medidaFinal == \"Milímetros\") {\n        //1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n        numero = numero * 1000;\n      } else if (medidaFinal == \"Micrômetros\") {\n        //1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n        numero = numero * 1e+6;\n      } else if (medidaFinal == \"Nanômetros\") {\n        //1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n        numero = numero * 1e+9;\n      } else if (medidaFinal == \"Milhas\") {\n        //1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n        numero = numero / 1609;\n      } else if (medidaFinal == \"Jardas\") {\n        //1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n        numero = numero * 1.094;\n      } else if (medidaFinal == \"pés\") {\n        //1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n        numero = numero * 3.281;\n      } else if (medidaFinal == \"polegada\") {\n        //1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n        numero = numero * 39.37;\n      } else if (medidaFinal == \"milha nautica\") {\n        //1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n        numero = numero / 1852;\n      }\n\n      ;\n    }\n\n    document.getElementById('impMedidaPos').value = numero;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"jsx-2012327690\"\n  }, React.createElement(\"select\", {\n    id: \"selMedidaPre\",\n    name: \"selMedidaPre\",\n    onChange: function onChange() {\n      converter();\n    },\n    className: \"jsx-2012327690\"\n  }, React.createElement(\"option\", {\n    value: \"metros\",\n    className: \"jsx-2012327690\"\n  }, \"metros\"), React.createElement(\"option\", {\n    value: \"Quil\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n    value: \"centimetros\",\n    className: \"jsx-2012327690\"\n  }, \"centimetros\"), React.createElement(\"option\", {\n    value: \"Mil\\xEDmetros\",\n    className: \"jsx-2012327690\"\n  }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n    value: \"Micr\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Nan\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Milhas\",\n    className: \"jsx-2012327690\"\n  }, \"Milhas\"), React.createElement(\"option\", {\n    value: \"Jardas\",\n    className: \"jsx-2012327690\"\n  }, \"Jardas\"), React.createElement(\"option\", {\n    value: \"p\\xE9s\",\n    className: \"jsx-2012327690\"\n  }, \"p\\xE9s\"), React.createElement(\"option\", {\n    value: \"polegada\",\n    className: \"jsx-2012327690\"\n  }, \"polegada\"), React.createElement(\"option\", {\n    value: \"milha nautica\",\n    className: \"jsx-2012327690\"\n  }, \"milha nautica\")), React.createElement(\"input\", {\n    type: \"number\",\n    id: \"impMedidaPre\",\n    name: \"impMedidaPre\",\n    required: true,\n    autofocus: true,\n    maxlength: \"20\",\n    className: \"jsx-2012327690\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-2012327690\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-2012327690\"\n  }), React.createElement(\"select\", {\n    id: \"selMedidaPos\",\n    name: \"selMedidaPos\",\n    onChange: function onChange() {\n      converter();\n    },\n    className: \"jsx-2012327690\"\n  }, React.createElement(\"option\", {\n    value: \"metros\",\n    className: \"jsx-2012327690\"\n  }, \"metros\"), React.createElement(\"option\", {\n    value: \"Quil\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n    value: \"centimetros\",\n    className: \"jsx-2012327690\"\n  }, \"centimetros\"), React.createElement(\"option\", {\n    value: \"Mil\\xEDmetros\",\n    className: \"jsx-2012327690\"\n  }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n    value: \"Micr\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Nan\\xF4metros\",\n    className: \"jsx-2012327690\"\n  }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Milhas\",\n    className: \"jsx-2012327690\"\n  }, \"Milhas\"), React.createElement(\"option\", {\n    value: \"Jardas\",\n    className: \"jsx-2012327690\"\n  }, \"Jardas\"), React.createElement(\"option\", {\n    value: \"p\\xE9s\",\n    className: \"jsx-2012327690\"\n  }, \"p\\xE9s\"), React.createElement(\"option\", {\n    value: \"polegada\",\n    className: \"jsx-2012327690\"\n  }, \"polegada\"), React.createElement(\"option\", {\n    value: \"milha nautica\",\n    className: \"jsx-2012327690\"\n  }, \"milha nautica\")), React.createElement(\"input\", {\n    type: \"number\",\n    id: \"impMedidaPos\",\n    name: \"impMedidaPos\",\n    maxlength: \"20\",\n    className: \"jsx-2012327690\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-2012327690\"\n  }), React.createElement(_JSXStyle, {\n    id: \"2012327690\"\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL29pNDAyODI1L0RvY3VtZW50b3MvUHJvamV0b3Mvc2l0ZV9kb192YWxlbnRlL2NvbXBvbmVudHMvb3JnYW5pc21zL29yZ0NvbnZlcnRVbmlkYWRlL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRHa0IiLCJmaWxlIjoiL2hvbWUvb2k0MDI4MjUvRG9jdW1lbnRvcy9Qcm9qZXRvcy9zaXRlX2RvX3ZhbGVudGUvY29tcG9uZW50cy9vcmdhbmlzbXMvb3JnQ29udmVydFVuaWRhZGUvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IG9yZ1RhbnF1ZSA9IGZ1bmN0aW9uIChwcm9wcykge1xuXG4gIGNvbnNvbGUubG9nKCcgY29tcG9uZW50IC0gb3JnQ29udmVydFVuaWRhZGUgJyk7XG5cbiAgZnVuY3Rpb24gY29udmVydGVyKCl7XG4gICAgdmFyIG51bWVybyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbXBNZWRpZGFQcmUnKS52YWx1ZTtcbiAgICB2YXIgbWVkaWRhSW5pdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWxNZWRpZGFQcmUnKS52YWx1ZTtcbiAgICB2YXIgbWVkaWRhRmluYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VsTWVkaWRhUG9zJykudmFsdWU7XG4gICAgaWYobWVkaWRhSW5pdCE9bWVkaWRhRmluYWwpe1xuICAgICAgaWYgKG1lZGlkYUluaXQ9PVwiUXVpbMO0bWV0cm9zXCIpe1xuICAgICAgICAvLzEgbWV0cm8gPSAwLDAwMSBRdWlsw7RtZXRyb3NcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvKjEwMDA7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhSW5pdD09XCJjZW50aW1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMTAwIGNlbnRpbWV0cm9zXG4gICAgICAgIG51bWVybyA9IG51bWVyby8xMDA7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhSW5pdD09XCJNaWzDrW1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMTAwMCBNaWzDrW1ldHJvc1xuICAgICAgICBudW1lcm8gPSBudW1lcm8vMTAwMDtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFJbml0PT1cIk1pY3LDtG1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMWUrNiBNaWNyw7RtZXRyb3NcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvLzFlKzY7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhSW5pdD09XCJOYW7DtG1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMWUrOSBOYW7DtG1ldHJvc1xuICAgICAgICBudW1lcm8gPSBudW1lcm8vMWUrOTtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFJbml0PT1cIk1pbGhhc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMCwwMDA2MjEzNzEgTWlsaGFzXG4gICAgICAgIG51bWVybyA9IG51bWVybyoxNjA5O1xuICAgICAgfWVsc2UgaWYgKG1lZGlkYUluaXQ9PVwiSmFyZGFzXCIpe1xuICAgICAgICAvLzEgbWV0cm8gPSAxLDA5MzYxIEphcmRhc1xuICAgICAgICBudW1lcm8gPSBudW1lcm8vMS4wOTQ7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhSW5pdD09XCJww6lzXCIpe1xuICAgICAgICAvLzEgbWV0cm8gPSAzLDI4MDg0IHDDqXNcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvLzMuMjgxO1xuICAgICAgfWVsc2UgaWYgKG1lZGlkYUluaXQ9PVwicG9sZWdhZGFcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDM5LDM3MDA4IHBvbGVnYWRhXG4gICAgICAgIG51bWVybyA9IG51bWVyby8zOS4zNztcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFJbml0PT1cIm1pbGhhIG5hdXRpY2FcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDAsMDAwNTM5OTU3IG1pbGhhIG5hdXRpY2FcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvKjE4NTI7XG4gICAgICB9O1xuICAgICAgaWYgKG1lZGlkYUZpbmFsPT1cIlF1aWzDtG1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMCwwMDEgUXVpbMO0bWV0cm9zIChkaXZpZGEgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMTAwMClcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvLzEwMDA7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhRmluYWw9PVwiY2VudGltZXRyb3NcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDEwMCBjZW50aW1ldHJvcyAobXVsdGlwbGlxdWUgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMTAwKVxuICAgICAgICBudW1lcm8gPSBudW1lcm8qMTAwO1xuICAgICAgfWVsc2UgaWYgKG1lZGlkYUZpbmFsPT1cIk1pbMOtbWV0cm9zXCIpe1xuICAgICAgICAvLzEgbWV0cm8gPSAxMDAwIE1pbMOtbWV0cm9zIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxMDAwKVxuICAgICAgICBudW1lcm8gPSBudW1lcm8qMTAwMDtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFGaW5hbD09XCJNaWNyw7RtZXRyb3NcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDFlKzYgTWljcsO0bWV0cm9zIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxZSs2KVxuICAgICAgICBudW1lcm8gPSBudW1lcm8qMWUrNjtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFGaW5hbD09XCJOYW7DtG1ldHJvc1wiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMWUrOSBOYW7DtG1ldHJvcyAoTXVsdGlwbGlxdWUgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMWUrOSlcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvKjFlKzk7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhRmluYWw9PVwiTWlsaGFzXCIpe1xuICAgICAgICAvLzEgbWV0cm8gPSAwLDAwMDYyMTM3MSBNaWxoYXMgKGRpdmlkYSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxNjA5KVxuICAgICAgICBudW1lcm8gPSBudW1lcm8vMTYwOTtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFGaW5hbD09XCJKYXJkYXNcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDEsMDkzNjEgSmFyZGFzIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxLDA5NClcbiAgICAgICAgbnVtZXJvID0gbnVtZXJvKjEuMDk0O1xuICAgICAgfWVsc2UgaWYgKG1lZGlkYUZpbmFsPT1cInDDqXNcIil7XG4gICAgICAgIC8vMSBtZXRybyA9IDMsMjgwODQgcMOpcyAobXVsdGlwbGlxdWUgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMywyODEpXG4gICAgICAgIG51bWVybyA9IG51bWVybyozLjI4MTtcbiAgICAgIH1lbHNlIGlmIChtZWRpZGFGaW5hbD09XCJwb2xlZ2FkYVwiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMzksMzcwMDggcG9sZWdhZGEgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDM5LDM3KVxuICAgICAgICBudW1lcm8gPSBudW1lcm8qMzkuMzc7XG4gICAgICB9ZWxzZSBpZiAobWVkaWRhRmluYWw9PVwibWlsaGEgbmF1dGljYVwiKXtcbiAgICAgICAgLy8xIG1ldHJvID0gMCwwMDA1Mzk5NTcgbWlsaGEgbmF1dGljYSAoZGl2aWRhIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDE4NTIpXG4gICAgICAgIG51bWVybyA9IG51bWVyby8xODUyO1xuICAgICAgfTtcbiAgICB9XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltcE1lZGlkYVBvcycpLnZhbHVlID0gbnVtZXJvO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgIDxzZWxlY3QgaWQ9XCJzZWxNZWRpZGFQcmVcIiBuYW1lPVwic2VsTWVkaWRhUHJlXCIgb25DaGFuZ2U9eygpID0+IHtjb252ZXJ0ZXIoKX19PlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWV0cm9zXCI+bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJRdWlsw7RtZXRyb3NcIj5RdWlsw7RtZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImNlbnRpbWV0cm9zXCI+Y2VudGltZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pbMOtbWV0cm9zXCI+TWlsw61tZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pY3LDtG1ldHJvc1wiPk1pY3LDtG1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTmFuw7RtZXRyb3NcIj5OYW7DtG1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTWlsaGFzXCI+TWlsaGFzPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJKYXJkYXNcIj5KYXJkYXM8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInDDqXNcIj5ww6lzPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwb2xlZ2FkYVwiPnBvbGVnYWRhPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJtaWxoYSBuYXV0aWNhXCI+bWlsaGEgbmF1dGljYTwvb3B0aW9uPlxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIGlkPVwiaW1wTWVkaWRhUHJlXCIgbmFtZT1cImltcE1lZGlkYVByZVwiIHJlcXVpcmVkIGF1dG9mb2N1cyBtYXhsZW5ndGg9XCIyMFwiLz48YnIvPlxuICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICAgIDxzZWxlY3QgaWQ9XCJzZWxNZWRpZGFQb3NcIiBuYW1lPVwic2VsTWVkaWRhUG9zXCIgb25DaGFuZ2U9eygpID0+IHtjb252ZXJ0ZXIoKX19PlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWV0cm9zXCI+bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJRdWlsw7RtZXRyb3NcIj5RdWlsw7RtZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImNlbnRpbWV0cm9zXCI+Y2VudGltZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pbMOtbWV0cm9zXCI+TWlsw61tZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pY3LDtG1ldHJvc1wiPk1pY3LDtG1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTmFuw7RtZXRyb3NcIj5OYW7DtG1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTWlsaGFzXCI+TWlsaGFzPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJKYXJkYXNcIj5KYXJkYXM8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInDDqXNcIj5ww6lzPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwb2xlZ2FkYVwiPnBvbGVnYWRhPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJtaWxoYSBuYXV0aWNhXCI+bWlsaGEgbmF1dGljYTwvb3B0aW9uPlxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIGlkPVwiaW1wTWVkaWRhUG9zXCIgbmFtZT1cImltcE1lZGlkYVBvc1wiIG1heGxlbmd0aD1cIjIwXCIvPjxici8+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICBcbiAgICAgIGB9PC9zdHlsZT5cblxuICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IG9yZ1RhbnF1ZVxuXG4iXX0= */\\n/*@ sourceURL=/home/oi402825/Documentos/Projetos/site_do_valente/components/organisms/orgConvertUnidade/index.js */\"));\n};\n\nexport default orgTanque;","map":{"version":3,"sources":["/home/oi402825/Documentos/Projetos/site_do_valente/components/organisms/orgConvertUnidade/index.js"],"names":["React","orgTanque","props","console","log","converter","numero","document","getElementById","value","medidaInit","medidaFinal"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst orgTanque = function (props) {\n\n  console.log(' component - orgConvertUnidade ');\n\n  function converter(){\n    var numero = document.getElementById('impMedidaPre').value;\n    var medidaInit = document.getElementById('selMedidaPre').value;\n    var medidaFinal = document.getElementById('selMedidaPos').value;\n    if(medidaInit!=medidaFinal){\n      if (medidaInit==\"Quilômetros\"){\n        //1 metro = 0,001 Quilômetros\n        numero = numero*1000;\n      }else if (medidaInit==\"centimetros\"){\n        //1 metro = 100 centimetros\n        numero = numero/100;\n      }else if (medidaInit==\"Milímetros\"){\n        //1 metro = 1000 Milímetros\n        numero = numero/1000;\n      }else if (medidaInit==\"Micrômetros\"){\n        //1 metro = 1e+6 Micrômetros\n        numero = numero/1e+6;\n      }else if (medidaInit==\"Nanômetros\"){\n        //1 metro = 1e+9 Nanômetros\n        numero = numero/1e+9;\n      }else if (medidaInit==\"Milhas\"){\n        //1 metro = 0,000621371 Milhas\n        numero = numero*1609;\n      }else if (medidaInit==\"Jardas\"){\n        //1 metro = 1,09361 Jardas\n        numero = numero/1.094;\n      }else if (medidaInit==\"pés\"){\n        //1 metro = 3,28084 pés\n        numero = numero/3.281;\n      }else if (medidaInit==\"polegada\"){\n        //1 metro = 39,37008 polegada\n        numero = numero/39.37;\n      }else if (medidaInit==\"milha nautica\"){\n        //1 metro = 0,000539957 milha nautica\n        numero = numero*1852;\n      };\n      if (medidaFinal==\"Quilômetros\"){\n        //1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n        numero = numero/1000;\n      }else if (medidaFinal==\"centimetros\"){\n        //1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n        numero = numero*100;\n      }else if (medidaFinal==\"Milímetros\"){\n        //1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n        numero = numero*1000;\n      }else if (medidaFinal==\"Micrômetros\"){\n        //1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n        numero = numero*1e+6;\n      }else if (medidaFinal==\"Nanômetros\"){\n        //1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n        numero = numero*1e+9;\n      }else if (medidaFinal==\"Milhas\"){\n        //1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n        numero = numero/1609;\n      }else if (medidaFinal==\"Jardas\"){\n        //1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n        numero = numero*1.094;\n      }else if (medidaFinal==\"pés\"){\n        //1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n        numero = numero*3.281;\n      }else if (medidaFinal==\"polegada\"){\n        //1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n        numero = numero*39.37;\n      }else if (medidaFinal==\"milha nautica\"){\n        //1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n        numero = numero/1852;\n      };\n    }\n    document.getElementById('impMedidaPos').value = numero;\n  }\n\n  return (\n    <div>\n    <select id=\"selMedidaPre\" name=\"selMedidaPre\" onChange={() => {converter()}}>\n              <option value=\"metros\">metros</option>\n              <option value=\"Quilômetros\">Quilômetros</option>\n              <option value=\"centimetros\">centimetros</option>\n              <option value=\"Milímetros\">Milímetros</option>\n              <option value=\"Micrômetros\">Micrômetros</option>\n              <option value=\"Nanômetros\">Nanômetros</option>\n              <option value=\"Milhas\">Milhas</option>\n              <option value=\"Jardas\">Jardas</option>\n              <option value=\"pés\">pés</option>\n              <option value=\"polegada\">polegada</option>\n              <option value=\"milha nautica\">milha nautica</option>\n            </select>\n            <input type=\"number\" id=\"impMedidaPre\" name=\"impMedidaPre\" required autofocus maxlength=\"20\"/><br/>\n            <br/>\n            <select id=\"selMedidaPos\" name=\"selMedidaPos\" onChange={() => {converter()}}>\n              <option value=\"metros\">metros</option>\n              <option value=\"Quilômetros\">Quilômetros</option>\n              <option value=\"centimetros\">centimetros</option>\n              <option value=\"Milímetros\">Milímetros</option>\n              <option value=\"Micrômetros\">Micrômetros</option>\n              <option value=\"Nanômetros\">Nanômetros</option>\n              <option value=\"Milhas\">Milhas</option>\n              <option value=\"Jardas\">Jardas</option>\n              <option value=\"pés\">pés</option>\n              <option value=\"polegada\">polegada</option>\n              <option value=\"milha nautica\">milha nautica</option>\n            </select>\n            <input type=\"number\" id=\"impMedidaPos\" name=\"impMedidaPos\" maxlength=\"20\"/><br/>\n      <style jsx>{`\n         \n      `}</style>\n\n    </div>\n  )\n}\n\nexport default orgTanque\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react'; //import Link from 'next/link'\n\nimport Head from 'next/head';\nimport FaviIcon from '../../atoms/atFavIcon';\nimport Layout from '../../moleculas/layout';\nimport * as Util from '../../../controller/util.js';\n\nvar conversordeunidade = function conversordeunidade(props) {\n  console.log('╔═════════════════════════════════════╗');\n  console.log('║          conversordeunidade         ║');\n  console.log('╚═════════════════════════════════════╝');\n  var regiao = Util.validaProps(props.regiao, \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n  return React.createElement(\"div\", {\n    className: \"jsx-691788713\"\n  }, React.createElement(Head, null, React.createElement(\"title\", {\n    className: \"jsx-691788713\"\n  }, \"Controle o Godzilla\"), React.createElement(FaviIcon, null), React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Controle o Godzilla\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: \"/game/conversordeunidade/\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"link\", {\n    rel: \"amphtml\",\n    href: \"/amp/game/conversordeunidade/\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"script\", {\n    async: true,\n    \"custom-element\": \"amp-lightbox\",\n    src: \"https://cdn.ampproject.org/v0/amp-lightbox-0.1.js\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"script\", {\n    async: true,\n    \"custom-element\": \"amp-iframe\",\n    src: \"https://cdn.ampproject.org/v0/amp-iframe-0.1.js\",\n    className: \"jsx-691788713\"\n  })), React.createElement(Layout, {\n    regiao: regiao,\n    modo: modo\n  }, React.createElement(\"h1\", {\n    className: \"jsx-691788713\"\n  }, \"Conversor de Unidade\"), React.createElement(\"div\", {\n    className: \"jsx-691788713\"\n  }, React.createElement(\"select\", {\n    id: \"regiao\",\n    name: \"regiao\",\n    className: \"jsx-691788713\"\n  }, React.createElement(\"option\", {\n    value: \"metros\",\n    className: \"jsx-691788713\"\n  }, \"metros\"), React.createElement(\"option\", {\n    value: \"Quil\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n    value: \"centimetros\",\n    className: \"jsx-691788713\"\n  }, \"centimetros\"), React.createElement(\"option\", {\n    value: \"Mil\\xEDmetros\",\n    className: \"jsx-691788713\"\n  }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n    value: \"Micr\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Nan\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Milhas\",\n    className: \"jsx-691788713\"\n  }, \"Milhas\"), React.createElement(\"option\", {\n    value: \"Jardas\",\n    className: \"jsx-691788713\"\n  }, \"Jardas\"), React.createElement(\"option\", {\n    value: \"p\\xE9s\",\n    className: \"jsx-691788713\"\n  }, \"p\\xE9s\"), React.createElement(\"option\", {\n    value: \"polegada\",\n    className: \"jsx-691788713\"\n  }, \"polegada\"), React.createElement(\"option\", {\n    value: \"milha nautica\",\n    className: \"jsx-691788713\"\n  }, \"milha nautica\")), \":\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"nome\",\n    required: true,\n    autofocus: true,\n    maxlength: \"20\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), React.createElement(\"select\", {\n    id: \"regiao\",\n    name: \"regiao\",\n    className: \"jsx-691788713\"\n  }, React.createElement(\"option\", {\n    value: \"metros\",\n    className: \"jsx-691788713\"\n  }, \"metros\"), React.createElement(\"option\", {\n    value: \"Quil\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n    value: \"centimetros\",\n    className: \"jsx-691788713\"\n  }, \"centimetros\"), React.createElement(\"option\", {\n    value: \"Mil\\xEDmetros\",\n    className: \"jsx-691788713\"\n  }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n    value: \"Micr\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Nan\\xF4metros\",\n    className: \"jsx-691788713\"\n  }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n    value: \"Milhas\",\n    className: \"jsx-691788713\"\n  }, \"Milhas\"), React.createElement(\"option\", {\n    value: \"Jardas\",\n    className: \"jsx-691788713\"\n  }, \"Jardas\"), React.createElement(\"option\", {\n    value: \"p\\xE9s\",\n    className: \"jsx-691788713\"\n  }, \"p\\xE9s\"), React.createElement(\"option\", {\n    value: \"polegada\",\n    className: \"jsx-691788713\"\n  }, \"polegada\"), React.createElement(\"option\", {\n    value: \"milha nautica\",\n    className: \"jsx-691788713\"\n  }, \"milha nautica\")), \":\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"nome\",\n    maxlength: \"20\",\n    className: \"jsx-691788713\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  })), \"//Unidade de Comprimento\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 0,001 Quil\\xF4metros (divida o valor de comprimento por 1000)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 1000 Mil\\xEDmetros (multiplique o valor de comprimento por 1000)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 1e+6 Micr\\xF4metros (multiplique o valor de comprimento por 1e+6)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 1e+9 Nan\\xF4metros (Multiplique o valor de comprimento por 1e+9)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 3,28084 p\\xE9s (multiplique o valor de comprimento por 3,281)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  }), \"//1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\", React.createElement(\"br\", {\n    className: \"jsx-691788713\"\n  })), React.createElement(_JSXStyle, {\n    id: \"691788713\"\n  }, \".Godzilla.jsx-691788713{position:absolute;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL29pNDAyODI1L0RvY3VtZW50b3MvUHJvamV0b3Mvc2l0ZV9kb192YWxlbnRlL2NvbXBvbmVudHMvdGVtcGxhdGVzL3V0aWxpdGFyaW9zL2NvbnZlcnNvcmRldW5pZGFkZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRWtCLEFBRzZCLGtCQUNwQiIsImZpbGUiOiIvaG9tZS9vaTQwMjgyNS9Eb2N1bWVudG9zL1Byb2pldG9zL3NpdGVfZG9fdmFsZW50ZS9jb21wb25lbnRzL3RlbXBsYXRlcy91dGlsaXRhcmlvcy9jb252ZXJzb3JkZXVuaWRhZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG4vL2ltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcbmltcG9ydCBGYXZpSWNvbiBmcm9tICcuLi8uLi9hdG9tcy9hdEZhdkljb24nXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL21vbGVjdWxhcy9sYXlvdXQnXG5pbXBvcnQgKiBhcyBVdGlsIGZyb20gJy4uLy4uLy4uL2NvbnRyb2xsZXIvdXRpbC5qcyc7XG5cbmNvbnN0IGNvbnZlcnNvcmRldW5pZGFkZSA9IGZ1bmN0aW9uIChwcm9wcykge1xuXG4gIGNvbnNvbGUubG9nKCfilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZcnKTtcbiAgY29uc29sZS5sb2coJ+KVkSAgICAgICAgICBjb252ZXJzb3JkZXVuaWRhZGUgICAgICAgICDilZEnKTtcbiAgY29uc29sZS5sb2coJ+KVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnScpO1xuXG4gIHZhciByZWdpYW8gPSBVdGlsLnZhbGlkYVByb3BzKHByb3BzLnJlZ2lhbyAsIFwiUkpcIik7XG4gIHZhciBtb2RvID0gVXRpbC52YWxpZGFQcm9wcyhwcm9wcy5tb2RvLCBcImh0bWxcIik7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5Db250cm9sZSBvIEdvZHppbGxhPC90aXRsZT5cbiAgICAgICAgPEZhdmlJY29uIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJDb250cm9sZSBvIEdvZHppbGxhXCIgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwiY2Fub25pY2FsXCIgaHJlZj1cIi9nYW1lL2NvbnZlcnNvcmRldW5pZGFkZS9cIiAvPlxuICAgICAgICA8bGluayByZWw9XCJhbXBodG1sXCIgaHJlZj1cIi9hbXAvZ2FtZS9jb252ZXJzb3JkZXVuaWRhZGUvXCIgLz5cbiAgICAgICAgPHNjcmlwdCBhc3luYyBjdXN0b20tZWxlbWVudD1cImFtcC1saWdodGJveFwiIHNyYz1cImh0dHBzOi8vY2RuLmFtcHByb2plY3Qub3JnL3YwL2FtcC1saWdodGJveC0wLjEuanNcIj48L3NjcmlwdD5cbiAgICAgICAgPHNjcmlwdCBhc3luYyBjdXN0b20tZWxlbWVudD1cImFtcC1pZnJhbWVcIiBzcmM9XCJodHRwczovL2Nkbi5hbXBwcm9qZWN0Lm9yZy92MC9hbXAtaWZyYW1lLTAuMS5qc1wiPjwvc2NyaXB0PlxuICAgICAgPC9IZWFkPlxuICAgICAgPExheW91dCByZWdpYW89e3JlZ2lhb30gbW9kbz17bW9kb30+XG4gICAgICAgICAgPGgxPkNvbnZlcnNvciBkZSBVbmlkYWRlPC9oMT5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxzZWxlY3QgaWQ9XCJyZWdpYW9cIiBuYW1lPVwicmVnaWFvXCI+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWV0cm9zXCI+bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUXVpbMO0bWV0cm9zXCI+UXVpbMO0bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiY2VudGltZXRyb3NcIj5jZW50aW1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pbMOtbWV0cm9zXCI+TWlsw61tZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJNaWNyw7RtZXRyb3NcIj5NaWNyw7RtZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJOYW7DtG1ldHJvc1wiPk5hbsO0bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTWlsaGFzXCI+TWlsaGFzPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiSmFyZGFzXCI+SmFyZGFzPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwicMOpc1wiPnDDqXM8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwb2xlZ2FkYVwiPnBvbGVnYWRhPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWlsaGEgbmF1dGljYVwiPm1pbGhhIG5hdXRpY2E8L29wdGlvbj5cbiAgICAgICAgICA8L3NlbGVjdD46PGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwibm9tZVwiIHJlcXVpcmVkIGF1dG9mb2N1cyBtYXhsZW5ndGg9XCIyMFwiLz48YnIvPlxuICAgICAgICAgIDxzZWxlY3QgaWQ9XCJyZWdpYW9cIiBuYW1lPVwicmVnaWFvXCI+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWV0cm9zXCI+bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUXVpbMO0bWV0cm9zXCI+UXVpbMO0bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiY2VudGltZXRyb3NcIj5jZW50aW1ldHJvczwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk1pbMOtbWV0cm9zXCI+TWlsw61tZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJNaWNyw7RtZXRyb3NcIj5NaWNyw7RtZXRyb3M8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJOYW7DtG1ldHJvc1wiPk5hbsO0bWV0cm9zPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTWlsaGFzXCI+TWlsaGFzPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiSmFyZGFzXCI+SmFyZGFzPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwicMOpc1wiPnDDqXM8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwb2xlZ2FkYVwiPnBvbGVnYWRhPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwibWlsaGEgbmF1dGljYVwiPm1pbGhhIG5hdXRpY2E8L29wdGlvbj5cbiAgICAgICAgICA8L3NlbGVjdD46PGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwibm9tZVwiIG1heGxlbmd0aD1cIjIwXCIvPjxici8+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAvL1VuaWRhZGUgZGUgQ29tcHJpbWVudG88YnIvPlxuICAgICAgICAgIC8vMSBtZXRybyA9IDAsMDAxIFF1aWzDtG1ldHJvcyAoZGl2aWRhIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMDApPGJyLz5cbiAgICAgICAgICAvLzEgbWV0cm8gPSAxMDAgY2VudGltZXRyb3MgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMCk8YnIvPlxuICAgICAgICAgIC8vMSBtZXRybyA9IDEwMDAgTWlsw61tZXRyb3MgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMDApPGJyLz5cbiAgICAgICAgICAvLzEgbWV0cm8gPSAxZSs2IE1pY3LDtG1ldHJvcyAobXVsdGlwbGlxdWUgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMWUrNik8YnIvPlxuICAgICAgICAgIC8vMSBtZXRybyA9IDFlKzkgTmFuw7RtZXRyb3MgKE11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDFlKzkpPGJyLz5cbiAgICAgICAgICAvLzEgbWV0cm8gPSAwLDAwMDYyMTM3MSBNaWxoYXMgKGRpdmlkYSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxNjA5KTxici8+XG4gICAgICAgICAgLy8xIG1ldHJvID0gMSwwOTM2MSBKYXJkYXMgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEsMDk0KTxici8+XG4gICAgICAgICAgLy8xIG1ldHJvID0gMywyODA4NCBww6lzIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAzLDI4MSk8YnIvPlxuICAgICAgICAgIC8vMSBtZXRybyA9IDM5LDM3MDA4IHBvbGVnYWRhIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAzOSwzNyk8YnIvPlxuICAgICAgICAgIC8vMSBtZXRybyA9IDAsMDAwNTM5OTU3IG1pbGhhIG5hdXRpY2EgKGRpdmlkYSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxODUyKTxici8+IFxuICAgICAgPC9MYXlvdXQ+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5Hb2R6aWxsYSB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG4vL1VuaWRhZGUgZGUgQ29tcHJpbWVudG9cbi8vMSBtZXRybyA9IDAsMDAxIFF1aWzDtG1ldHJvcyAoZGl2aWRhIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMDApXG4vLzEgbWV0cm8gPSAxMDAgY2VudGltZXRyb3MgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMClcbi8vMSBtZXRybyA9IDEwMDAgTWlsw61tZXRyb3MgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEwMDApXG4vLzEgbWV0cm8gPSAxZSs2IE1pY3LDtG1ldHJvcyAobXVsdGlwbGlxdWUgbyB2YWxvciBkZSBjb21wcmltZW50byBwb3IgMWUrNilcbi8vMSBtZXRybyA9IDFlKzkgTmFuw7RtZXRyb3MgKE11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDFlKzkpXG4vLzEgbWV0cm8gPSAwLDAwMDYyMTM3MSBNaWxoYXMgKGRpdmlkYSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxNjA5KVxuLy8xIG1ldHJvID0gMSwwOTM2MSBKYXJkYXMgKG11bHRpcGxpcXVlIG8gdmFsb3IgZGUgY29tcHJpbWVudG8gcG9yIDEsMDk0KVxuLy8xIG1ldHJvID0gMywyODA4NCBww6lzIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAzLDI4MSlcbi8vMSBtZXRybyA9IDM5LDM3MDA4IHBvbGVnYWRhIChtdWx0aXBsaXF1ZSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAzOSwzNylcbi8vMSBtZXRybyA9IDAsMDAwNTM5OTU3IG1pbGhhIG5hdXRpY2EgKGRpdmlkYSBvIHZhbG9yIGRlIGNvbXByaW1lbnRvIHBvciAxODUyKVxuXG5cbi8vIDxkaXYgY2xhc3NOYW1lPVwiR29kemlsbGFcIiBpZD1cInBvc2l0aW9uXCI+XG4vLyA8YSBocmVmPVwiI21ldUxpbmtcIiBvbmNsaWNrPVwibXlGdW5jdGlvbigpO1wiPlxuXG4vLzxpbWcgb25sb2FkPVwibW91c2UoKTtcIiBhbHQ9XCJGdW5kb1wiIHNyYz1cImh0dHBzOi8vaW1nLXMtbXNuLWNvbS5ha2FtYWl6ZWQubmV0L3RlbmFudC9hbXAvZW50aXR5aWQvQkJWU2hFYS5pbWc/aD00MTYmYW1wO3c9Nzk5JmFtcDttPTYmYW1wO3E9NjAmYW1wO3U9dCZhbXA7bz1mJmFtcDtsPWYmYW1wO3g9ODcxJmFtcDt5PTY1NFwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiB0aXRsZT1cIkNlbsOhcmlvIGRlIGNpZGFkZXNcIj48L2ltZz5cblxuZXhwb3J0IGRlZmF1bHQgY29udmVyc29yZGV1bmlkYWRlXG5cbiJdfQ== */\\n/*@ sourceURL=/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/utilitarios/conversordeunidade.js */\"));\n}; //Unidade de Comprimento\n//1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n//1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n//1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n//1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n//1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n//1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n//1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n//1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n//1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n//1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n// <div className=\"Godzilla\" id=\"position\">\n// <a href=\"#meuLink\" onclick=\"myFunction();\">\n//<img onload=\"mouse();\" alt=\"Fundo\" src=\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BBVShEa.img?h=416&amp;w=799&amp;m=6&amp;q=60&amp;u=t&amp;o=f&amp;l=f&amp;x=871&amp;y=654\" width=\"100%\" height=\"100%\" title=\"Cenário de cidades\"></img>\n\n\nexport default conversordeunidade;","map":{"version":3,"sources":["/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/utilitarios/conversordeunidade.js"],"names":["React","Head","FaviIcon","Layout","Util","conversordeunidade","props","console","log","regiao","validaProps","modo"],"mappings":"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","sourcesContent":["import React from 'react'\n//import Link from 'next/link'\nimport Head from 'next/head'\nimport FaviIcon from '../../atoms/atFavIcon'\nimport Layout from '../../moleculas/layout'\nimport * as Util from '../../../controller/util.js';\n\nconst conversordeunidade = function (props) {\n\n  console.log('╔═════════════════════════════════════╗');\n  console.log('║          conversordeunidade         ║');\n  console.log('╚═════════════════════════════════════╝');\n\n  var regiao = Util.validaProps(props.regiao , \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n\n  return (\n    <div>\n      <Head>\n        <title>Controle o Godzilla</title>\n        <FaviIcon />\n        <meta name=\"description\" content=\"Controle o Godzilla\" />\n        <link rel=\"canonical\" href=\"/game/conversordeunidade/\" />\n        <link rel=\"amphtml\" href=\"/amp/game/conversordeunidade/\" />\n        <script async custom-element=\"amp-lightbox\" src=\"https://cdn.ampproject.org/v0/amp-lightbox-0.1.js\"></script>\n        <script async custom-element=\"amp-iframe\" src=\"https://cdn.ampproject.org/v0/amp-iframe-0.1.js\"></script>\n      </Head>\n      <Layout regiao={regiao} modo={modo}>\n          <h1>Conversor de Unidade</h1>\n          <div>\n          <select id=\"regiao\" name=\"regiao\">\n            <option value=\"metros\">metros</option>\n            <option value=\"Quilômetros\">Quilômetros</option>\n            <option value=\"centimetros\">centimetros</option>\n            <option value=\"Milímetros\">Milímetros</option>\n            <option value=\"Micrômetros\">Micrômetros</option>\n            <option value=\"Nanômetros\">Nanômetros</option>\n            <option value=\"Milhas\">Milhas</option>\n            <option value=\"Jardas\">Jardas</option>\n            <option value=\"pés\">pés</option>\n            <option value=\"polegada\">polegada</option>\n            <option value=\"milha nautica\">milha nautica</option>\n          </select>:<input type=\"number\" name=\"nome\" required autofocus maxlength=\"20\"/><br/>\n          <select id=\"regiao\" name=\"regiao\">\n            <option value=\"metros\">metros</option>\n            <option value=\"Quilômetros\">Quilômetros</option>\n            <option value=\"centimetros\">centimetros</option>\n            <option value=\"Milímetros\">Milímetros</option>\n            <option value=\"Micrômetros\">Micrômetros</option>\n            <option value=\"Nanômetros\">Nanômetros</option>\n            <option value=\"Milhas\">Milhas</option>\n            <option value=\"Jardas\">Jardas</option>\n            <option value=\"pés\">pés</option>\n            <option value=\"polegada\">polegada</option>\n            <option value=\"milha nautica\">milha nautica</option>\n          </select>:<input type=\"number\" name=\"nome\" maxlength=\"20\"/><br/>\n          </div>\n\n          //Unidade de Comprimento<br/>\n          //1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)<br/>\n          //1 metro = 100 centimetros (multiplique o valor de comprimento por 100)<br/>\n          //1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)<br/>\n          //1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)<br/>\n          //1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)<br/>\n          //1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)<br/>\n          //1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)<br/>\n          //1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)<br/>\n          //1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)<br/>\n          //1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)<br/> \n      </Layout>\n      <style jsx>{`\n        .Godzilla {\n          position: absolute;\n        }\n      `}</style>\n\n    </div>\n  )\n}\n\n//Unidade de Comprimento\n//1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n//1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n//1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n//1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n//1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n//1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n//1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n//1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n//1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n//1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n\n\n// <div className=\"Godzilla\" id=\"position\">\n// <a href=\"#meuLink\" onclick=\"myFunction();\">\n\n//<img onload=\"mouse();\" alt=\"Fundo\" src=\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BBVShEa.img?h=416&amp;w=799&amp;m=6&amp;q=60&amp;u=t&amp;o=f&amp;l=f&amp;x=871&amp;y=654\" width=\"100%\" height=\"100%\" title=\"Cenário de cidades\"></img>\n\nexport default conversordeunidade\n\n"]},"metadata":{},"sourceType":"module"}
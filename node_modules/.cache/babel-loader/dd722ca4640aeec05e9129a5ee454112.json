{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Img from '../../../atoms/atImg/index.js';\nimport Div from '../../../atoms/atDiv/index.js';\nimport Layout from '../../../moleculas/layout';\nimport MoHead from '../../../moleculas/moHead';\nimport DivCodigo from '../../../atoms/atDivCodigo'; //import DivNaveg from '../../../atoms/atDivNaveg'\n\nimport * as Util from '../../../../controller/util.js';\n\nvar codigoJava = function codigoJava(props) {\n  console.log('╔════════════════════════╗');\n  console.log('║    Tutorial  SQL       ║');\n  console.log('╚════════════════════════╝');\n  var regiao = Util.validaProps(props.regiao, \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n  return React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(MoHead, {\n    modo: modo,\n    title: \"SQL\",\n    description: \"SQL\",\n    canonical: \"/tutorial/sql/\",\n    keywords: \"Banco de Dados, SQL, Select, Insert, Delete, Update, Group By\"\n  }), React.createElement(Layout, {\n    regiao: regiao,\n    modo: modo,\n    titulo: \"Tutoriais\",\n    categoria: \"Banco de Dados\"\n  }, React.createElement(Div, {\n    display: \"responcivo\"\n  }, React.createElement(\"div\", {\n    className: \"jsx-1367375073\" + \" \" + \"coluna404\"\n  }, React.createElement(\"h1\", {\n    className: \"jsx-1367375073\"\n  }, \"SQL\"), React.createElement(\"h3\", {\n    className: \"jsx-1367375073\"\n  }, \"O que \\xE9 SQL?\"), React.createElement(\"p\", {\n    className: \"jsx-1367375073\"\n  }, \"SQL, ou Structured Query Language, ou Linguagem de Consulta Estruturada, \\xE9 a linguagem de pesquisa declarativa padr\\xE3o para banco de dados relacional (base de dados relacional). As caracter\\xEDsticas originais do SQL foram inspiradas na \\xE1lgebra relacional.\"), React.createElement(\"h3\", {\n    className: \"jsx-1367375073\"\n  }, \"A linguagem:\"), React.createElement(DivCodigo, {\n    titulo: \"Adicionar um novo registro\"\n  }, \"Insert Into clientes  (nome, sobrenomes, endere\\xE7o, cidade, c\\xF3digo postal, e-mail, pedidos) Values ('Pedro', 'Palotes', 'Percebe n\\xB013', 'Londrina', '123456', 'pedro@criarweb.com', 33)\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), \"Insert Into nome_tabela (nome_campo1, nome_campo2,...) Values (valor_campo1, valor_campo2...)\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Apagar um registro\"\n  }, \"Delete From nome_tabela Where condicoes_de_selecao\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Atualizar um registro\"\n  }, \"Update clientes Set nome='Jos\\xE9' Where nome='Pedro' \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), \"Update nome_tabela Set nome_campo1 = valor_campo1, nome_campo2 = valor_campo2,... Where condicoes_de_selecao\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Sele\\xE7\\xE3o de tabelas I:\"\n  }, \"Select * From clientes\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Mostrar os clientes da cidade 'Rio de janeiro':\"\n  }, \"Select * From clientes Where cidade Like 'Rio de janeiro'\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Ordenar o resultado pelo campo nome:\"\n  }, \"Select * From clientes Where cidade Like 'Rio de janeiro' Order By nome\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"Ordenar o resultado pelos campos nome e sobrenome:\"\n  }, \"Select * From clientes Where cidade Like 'Rio de Janeiro' Order By nome, sobrenome\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"\\xC9 poss\\xEDvel tamb\\xE9m usar ordem inversa:\"\n  }, \"Select * From clientes Order By pedidos Decres\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Uma op\\xE7\\xE3o interessante \\xE9 a de efetuar sele\\xE7\\xF5es sem coincid\\xEAncia. Se por exemplo, \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"busc\\xE1ssemos saber em que cidades se encontram nossos clientes sem a necessidade de que para isso apare\\xE7a v\\xE1rias vezes a mesma cidade,\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"usar\\xEDamos uma senten\\xE7a desta classe:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"sele\\xE7\\xF5es sem coincid\\xEAncia:\"\n  }, \"Ex.: Select Distinct cidade From clientes Order By cidade \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Nesta senten\\xE7a selecionamos todos os clientes de Salvador cujo nome n\\xE3o seja Jose.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Como se pode ver, empregamos Like ao inv\\xE9s de = simplesmente para evitar inconvenientes devido ao emprego ou n\\xE3o de mai\\xFAsculas.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where cidade Like 'salvador' And Not nome Like 'Jose'\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Se quis\\xE9ssemos recolher em uma sele\\xE7\\xE3o aos clientes de nossa tabela cujo sobrenome come\\xE7a por A e cujo n\\xFAmero de pedidos esteja compreendido entre 20 e 40:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where sobrenomes like 'A%' And pedidos Between 20 And 40\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"O operador In, ser\\xE1 visto mais adiante, \\xE9 muito pr\\xE1tico para consultas em v\\xE1rias tabelas. Para casos em uma \\xFAnica tabela \\xE9 empregada da seguinte forma:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select * From clientes Where cidade In ('Salvador','Fortaleza','Florianopolis') \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Select em varias tabelas:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select clientes.sobrenomes, clientes.email From clientes,pedidos Where pedidos.data like '25/02/00' And pedidos.id_cliente= clientes.id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Select pedidos.id_pedido, artigos.titulo From pedidos, artigos Where pedidos.id_artigo=artigos.id_artigo \", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Dado que o campo da fun\\xE7\\xE3o n\\xE3o existe no banco de dados, pois o estamos gerando virtualmente, isto pode criar inconvenientes quando estivermos trabalhando com nossos scripts na hora de tratar seu valor e seu nome de campo. \\xC9 por isso que o valor da fun\\xE7\\xE3o tem que ser recuperada a partir de um apelido que n\\xF3s especificaremos na senten\\xE7a SQL a partir da instru\\xE7\\xE3o AS. A coisa poderia ficar assim:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Soma(total) As soma_pedidos From pedidos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"A partir desta senten\\xE7a calculamos a soma dos valores de todos os pedidos realizados e armazenamos esse valor em um campo virtual chamado soma_pedidos que poder\\xE1 ser utilizado como qualquer outro campo por nossas p\\xE1ginas din\\xE2micas.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Obviamente, tudo que foi visto at\\xE9 agora pode ser aplicado neste tipo de fun\\xE7\\xF5es de modo que, por exemplo, podemos estabelecer condi\\xE7\\xF5es com a cl\\xE1usula Where construindo senten\\xE7as como esta:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Soma(quantidade) as soma_artigos From pedidos Where id_artigo=6\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Isto nos proporcionaria a quantidade de exemplares de um determinado livro que foram vendidos.\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Outra propriedade interessante destas fun\\xE7\\xF5es \\xE9 que permitem realizar opera\\xE7\\xF5es com v\\xE1rios campos dentro de um mesmo par\\xEAnteses:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Avg(total/quantidade) From pedidos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Esta senten\\xE7a d\\xE1 como resultado o pre\\xE7o m\\xE9dio que est\\xE3o sendo vendidos os livros. Este resultado n\\xE3o tem porqu\\xEA coincidir com o do pre\\xE7o m\\xE9dio dos livros presentes no invent\\xE1rio, j\\xE1 que, pode ser que as pessoas tenham tend\\xEAncia a comprar os livros caros ou os baratos:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select Avg(precio) as preco_venda From artigos\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Uma cl\\xE1usula interessante no uso das fun\\xE7\\xF5es \\xE9 Group By. Esta cl\\xE1usula nos permite agrupar registros aos quais vamos aplicar a fun\\xE7\\xE3o. Podemos por exemplo calcular o dinheiro gastado por cada cliente:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"select id_cliente, Soma(total) as soma_pedidos From pedidos Group By id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), \"Ou saber o n\\xFAmero de pedidos que foram realizados:\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }), React.createElement(DivCodigo, {\n    titulo: \"SQL:\"\n  }, \"Select id_cliente, Count(*) as numero_pedidos From pedidos Group By id_cliente\", React.createElement(\"br\", {\n    className: \"jsx-1367375073\"\n  }))), React.createElement(\"div\", {\n    className: \"jsx-1367375073\"\n  }, React.createElement(Img, {\n    src: \"/static/assetsv5/img/codigo/logosql.png\",\n    width: \"200px\",\n    height: \"200px\",\n    alt: \"Logo sql\",\n    title: \"Logo sql\",\n    class: \"ClassLogosql\",\n    modo: modo\n  })))), React.createElement(_JSXStyle, {\n    id: \"1367375073\"\n  }, \".h1.jsx-1367375073{color :#000000;}.p.jsx-1367375073{color :#000000;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/codigo/bancodedados/sql.js */\"));\n};\n\nexport default codigoJava;","map":{"version":3,"sources":["/home/oi402825/Documentos/Projetos/site_do_valente/components/templates/codigo/bancodedados/sql.js"],"names":["React","Img","Div","Layout","MoHead","DivCodigo","Util","codigoJava","props","console","log","regiao","validaProps","modo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Img from '../../../atoms/atImg/index.js'\nimport Div from '../../../atoms/atDiv/index.js'\nimport Layout from '../../../moleculas/layout'\nimport MoHead from '../../../moleculas/moHead'\nimport DivCodigo from '../../../atoms/atDivCodigo'\n//import DivNaveg from '../../../atoms/atDivNaveg'\nimport * as Util from '../../../../controller/util.js';\n\nconst codigoJava = function (props) {\n\n  console.log('╔════════════════════════╗');\n  console.log('║    Tutorial  SQL       ║');\n  console.log('╚════════════════════════╝');\n\n  var regiao = Util.validaProps(props.regiao , \"RJ\");\n  var modo = Util.validaProps(props.modo, \"html\");\n\n  return (\n    <div>\n      <MoHead \n        modo={modo} \n        title=\"SQL\" \n        description=\"SQL\" \n        canonical=\"/tutorial/sql/\"\n        keywords=\"Banco de Dados, SQL, Select, Insert, Delete, Update, Group By\"\n      />\n      <Layout regiao={regiao} modo={modo} titulo=\"Tutoriais\" categoria=\"Banco de Dados\">\n        <Div display=\"responcivo\">\n          <div className=\"coluna404\">\n            <h1>SQL</h1>\n            <h3>O que é SQL?</h3>\n              <p>\n                SQL, ou Structured Query Language, ou Linguagem de Consulta Estruturada, é a linguagem de pesquisa declarativa padrão para banco de dados relacional (base de dados relacional).\n                As características originais do SQL foram inspiradas na álgebra relacional.\n              </p>\n            <h3>A linguagem:</h3>\n              <DivCodigo titulo=\"Adicionar um novo registro\">\n                Insert Into clientes  (nome, sobrenomes, endereço, cidade, código postal, e-mail, pedidos) Values ('Pedro', 'Palotes', 'Percebe n°13', 'Londrina', '123456', 'pedro@criarweb.com', 33)<br/>\n              </DivCodigo>\n              Insert Into nome_tabela (nome_campo1, nome_campo2,...) Values (valor_campo1, valor_campo2...)<br/>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Apagar um registro\">\n                Delete From nome_tabela Where condicoes_de_selecao<br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Atualizar um registro\">\n                Update clientes Set nome='José' Where nome='Pedro' <br/>\n              </DivCodigo>\n              Update nome_tabela Set nome_campo1 = valor_campo1, nome_campo2 = valor_campo2,... Where condicoes_de_selecao<br/>\n              \n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Seleção de tabelas I:\">\n                Select * From clientes<br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Mostrar os clientes da cidade 'Rio de janeiro':\">\n                Select * From clientes Where cidade Like 'Rio de janeiro'<br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Ordenar o resultado pelo campo nome:\">\n                Select * From clientes Where cidade Like 'Rio de janeiro' Order By nome<br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"Ordenar o resultado pelos campos nome e sobrenome:\">\n                Select * From clientes Where cidade Like 'Rio de Janeiro' Order By nome, sobrenome<br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              <DivCodigo titulo=\"É possível também usar ordem inversa:\">\n                Select * From clientes Order By pedidos Decres<br/>\n              </DivCodigo>\n              <br/>\n              Uma opção interessante é a de efetuar seleções sem coincidência. Se por exemplo, <br/>\n              buscássemos saber em que cidades se encontram nossos clientes sem a necessidade de que para isso apareça várias vezes a mesma cidade,<br/>\n              usaríamos uma sentença desta classe:<br/>\n              <DivCodigo titulo=\"seleções sem coincidência:\">\n                Ex.: Select Distinct cidade From clientes Order By cidade <br/>\n              </DivCodigo>\n              <br/>\n              Nesta sentença selecionamos todos os clientes de Salvador cujo nome não seja Jose.<br/>\n              Como se pode ver, empregamos Like ao invés de = simplesmente para evitar inconvenientes devido ao emprego ou não de maiúsculas.<br/>\n              <DivCodigo titulo=\"SQL:\">\n                Select * From clientes Where cidade Like 'salvador' And Not nome Like 'Jose'<br/>\n              </DivCodigo>\n              <br/>\n              Se quiséssemos recolher em uma seleção aos clientes de nossa tabela cujo sobrenome começa por A e cujo número de pedidos esteja compreendido entre 20 e 40:<br/>\n              <DivCodigo titulo=\"SQL:\">\n                Select * From clientes Where sobrenomes like 'A%' And pedidos Between 20 And 40<br/>\n              </DivCodigo>\n              <br/>\n              O operador In, será visto mais adiante, é muito prático para consultas em várias tabelas. Para casos em uma única tabela é empregada da seguinte forma:<br/>\n              <DivCodigo titulo=\"SQL:\">\n                Select * From clientes Where cidade In ('Salvador','Fortaleza','Florianopolis') <br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              Select em varias tabelas:<br/>\n              <DivCodigo titulo=\"SQL:\">\n                Select clientes.sobrenomes, clientes.email From clientes,pedidos Where pedidos.data like '25/02/00' And pedidos.id_cliente= clientes.id_cliente<br/>\n                Select pedidos.id_pedido, artigos.titulo From pedidos, artigos Where pedidos.id_artigo=artigos.id_artigo <br/>\n              </DivCodigo>\n              <br/>\n              <br/>\n              Dado que o campo da função não existe no banco de dados, pois o estamos gerando virtualmente, isto pode criar inconvenientes quando estivermos trabalhando com nossos scripts na hora de tratar seu valor e seu nome de campo. É por isso que o valor da função tem que ser recuperada a partir de um apelido que nós especificaremos na sentença SQL a partir da instrução AS. A coisa poderia ficar assim:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              Select Soma(total) As soma_pedidos From pedidos<br/>\n              </DivCodigo>\n              <br/>\n              A partir desta sentença calculamos a soma dos valores de todos os pedidos realizados e armazenamos esse valor em um campo virtual chamado soma_pedidos que poderá ser utilizado como qualquer outro campo por nossas páginas dinâmicas.<br/>\n              <br/>\n              Obviamente, tudo que foi visto até agora pode ser aplicado neste tipo de funções de modo que, por exemplo, podemos estabelecer condições com a cláusula Where construindo sentenças como esta:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              Select Soma(quantidade) as soma_artigos From pedidos Where id_artigo=6<br/>\n              </DivCodigo>\n              <br/>\n              Isto nos proporcionaria a quantidade de exemplares de um determinado livro que foram vendidos.<br/>\n              <br/>\n              Outra propriedade interessante destas funções é que permitem realizar operações com vários campos dentro de um mesmo parênteses:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              Select Avg(total/quantidade) From pedidos<br/>\n              </DivCodigo>\n              <br/>\n              Esta sentença dá como resultado o preço médio que estão sendo vendidos os livros. Este resultado não tem porquê coincidir com o do preço médio dos livros presentes no inventário, já que, pode ser que as pessoas tenham tendência a comprar os livros caros ou os baratos:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              Select Avg(precio) as preco_venda From artigos<br/>\n              </DivCodigo>\n              <br/>\n              Uma cláusula interessante no uso das funções é Group By. Esta cláusula nos permite agrupar registros aos quais vamos aplicar a função. Podemos por exemplo calcular o dinheiro gastado por cada cliente:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              select id_cliente, Soma(total) as soma_pedidos From pedidos Group By id_cliente<br/>\n              </DivCodigo>\n              <br/>\n              Ou saber o número de pedidos que foram realizados:<br/>\n              <DivCodigo titulo=\"SQL:\">\n              Select id_cliente, Count(*) as numero_pedidos From pedidos Group By id_cliente<br/>\n              </DivCodigo>\n          </div>\n          <div>\n            <Img \n                  src=\"/static/assetsv5/img/codigo/logosql.png\"\n                  width=\"200px\"\n                  height=\"200px\"\n                  alt=\"Logo sql\"\n                  title=\"Logo sql\"\n                  class=\"ClassLogosql\"\n                  modo={modo}>\n            </Img>\n          </div>\n        </Div>\n      </Layout>\n      <style jsx>{`\n        .h1{\n          color : #000000;\n        }\n        .p{\n          color : #000000;\n        }\n    `}</style>\n    </div>\n  )\n}\n\nexport default codigoJava\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\n\nvar orgTanque = function orgTanque(props) {\n  console.log(' component - orgConvertUnidade ');\n\n  if (props.modo == \"html\") {\n    var converter = function converter() {\n      var numero = document.getElementById('impMedidaPre').value;\n      var medidaInit = document.getElementById('selMedidaPre').value;\n      var medidaFinal = document.getElementById('selMedidaPos').value;\n\n      if (medidaInit != medidaFinal) {\n        if (medidaInit == \"Quilômetros\") {\n          //1 metro = 0,001 Quilômetros\n          numero = numero * 1000;\n        } else if (medidaInit == \"centimetros\") {\n          //1 metro = 100 centimetros\n          numero = numero / 100;\n        } else if (medidaInit == \"Milímetros\") {\n          //1 metro = 1000 Milímetros\n          numero = numero / 1000;\n        } else if (medidaInit == \"Micrômetros\") {\n          //1 metro = 1e+6 Micrômetros\n          numero = numero / 1e+6;\n        } else if (medidaInit == \"Nanômetros\") {\n          //1 metro = 1e+9 Nanômetros\n          numero = numero / 1e+9;\n        } else if (medidaInit == \"Milhas\") {\n          //1 metro = 0,000621371 Milhas\n          numero = numero * 1609;\n        } else if (medidaInit == \"Jardas\") {\n          //1 metro = 1,09361 Jardas\n          numero = numero / 1.094;\n        } else if (medidaInit == \"pés\") {\n          //1 metro = 3,28084 pés\n          numero = numero / 3.281;\n        } else if (medidaInit == \"polegada\") {\n          //1 metro = 39,37008 polegada\n          numero = numero / 39.37;\n        } else if (medidaInit == \"milha nautica\") {\n          //1 metro = 0,000539957 milha nautica\n          numero = numero * 1852;\n        }\n\n        ;\n\n        if (medidaFinal == \"Quilômetros\") {\n          //1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n          numero = numero / 1000;\n        } else if (medidaFinal == \"centimetros\") {\n          //1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n          numero = numero * 100;\n        } else if (medidaFinal == \"Milímetros\") {\n          //1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n          numero = numero * 1000;\n        } else if (medidaFinal == \"Micrômetros\") {\n          //1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n          numero = numero * 1e+6;\n        } else if (medidaFinal == \"Nanômetros\") {\n          //1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n          numero = numero * 1e+9;\n        } else if (medidaFinal == \"Milhas\") {\n          //1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n          numero = numero / 1609;\n        } else if (medidaFinal == \"Jardas\") {\n          //1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n          numero = numero * 1.094;\n        } else if (medidaFinal == \"pés\") {\n          //1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n          numero = numero * 3.281;\n        } else if (medidaFinal == \"polegada\") {\n          //1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n          numero = numero * 39.37;\n        } else if (medidaFinal == \"milha nautica\") {\n          //1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n          numero = numero / 1852;\n        }\n\n        ;\n      }\n\n      document.getElementById('impMedidaPos').value = numero;\n    };\n\n    return React.createElement(\"div\", null, React.createElement(\"select\", {\n      id: \"selMedidaPre\",\n      name: \"selMedidaPre\",\n      onChange: function onChange() {\n        converter();\n      }\n    }, React.createElement(\"option\", {\n      value: \"metros\"\n    }, \"metros\"), React.createElement(\"option\", {\n      value: \"Quil\\xF4metros\"\n    }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n      value: \"centimetros\"\n    }, \"centimetros\"), React.createElement(\"option\", {\n      value: \"Mil\\xEDmetros\"\n    }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n      value: \"Micr\\xF4metros\"\n    }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n      value: \"Nan\\xF4metros\"\n    }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n      value: \"Milhas\"\n    }, \"Milhas\"), React.createElement(\"option\", {\n      value: \"Jardas\"\n    }, \"Jardas\"), React.createElement(\"option\", {\n      value: \"p\\xE9s\"\n    }, \"p\\xE9s\"), React.createElement(\"option\", {\n      value: \"polegada\"\n    }, \"polegada\"), React.createElement(\"option\", {\n      value: \"milha nautica\"\n    }, \"milha nautica\")), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"impMedidaPre\",\n      name: \"impMedidaPre\",\n      required: true,\n      autofocus: true,\n      maxlength: \"20\"\n    }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"select\", {\n      id: \"selMedidaPos\",\n      name: \"selMedidaPos\",\n      onChange: function onChange() {\n        converter();\n      }\n    }, React.createElement(\"option\", {\n      value: \"metros\"\n    }, \"metros\"), React.createElement(\"option\", {\n      value: \"Quil\\xF4metros\"\n    }, \"Quil\\xF4metros\"), React.createElement(\"option\", {\n      value: \"centimetros\"\n    }, \"centimetros\"), React.createElement(\"option\", {\n      value: \"Mil\\xEDmetros\"\n    }, \"Mil\\xEDmetros\"), React.createElement(\"option\", {\n      value: \"Micr\\xF4metros\"\n    }, \"Micr\\xF4metros\"), React.createElement(\"option\", {\n      value: \"Nan\\xF4metros\"\n    }, \"Nan\\xF4metros\"), React.createElement(\"option\", {\n      value: \"Milhas\"\n    }, \"Milhas\"), React.createElement(\"option\", {\n      value: \"Jardas\"\n    }, \"Jardas\"), React.createElement(\"option\", {\n      value: \"p\\xE9s\"\n    }, \"p\\xE9s\"), React.createElement(\"option\", {\n      value: \"polegada\"\n    }, \"polegada\"), React.createElement(\"option\", {\n      value: \"milha nautica\"\n    }, \"milha nautica\")), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"impMedidaPos\",\n      name: \"impMedidaPos\",\n      maxlength: \"20\"\n    }), React.createElement(\"br\", null));\n  } else {\n    return React.createElement(\"div\", null, \"N\\xE3o \\xE9 possivel executar o conversor de unidade no modo APM.\", React.createElement(\"br\", null), React.createElement(\"a\", {\n      href: \"/utilitarios/conversordeunidade/\"\n    }, \"Sair do modo AMP.\"), React.createElement(\"br\", null));\n  }\n};\n\nexport default orgTanque;","map":{"version":3,"sources":["/home/oi402825/Documentos/Projetos/site_do_valente/components/organisms/orgConvertUnidade/index.js"],"names":["React","orgTanque","props","console","log","modo","converter","numero","document","getElementById","value","medidaInit","medidaFinal"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst orgTanque = function (props) {\n\n  console.log(' component - orgConvertUnidade ');\n  if(props.modo==\"html\"){\n    function converter(){\n      var numero = document.getElementById('impMedidaPre').value;\n      var medidaInit = document.getElementById('selMedidaPre').value;\n      var medidaFinal = document.getElementById('selMedidaPos').value;\n      if(medidaInit!=medidaFinal){\n        if (medidaInit==\"Quilômetros\"){\n          //1 metro = 0,001 Quilômetros\n          numero = numero*1000;\n        }else if (medidaInit==\"centimetros\"){\n          //1 metro = 100 centimetros\n          numero = numero/100;\n        }else if (medidaInit==\"Milímetros\"){\n          //1 metro = 1000 Milímetros\n          numero = numero/1000;\n        }else if (medidaInit==\"Micrômetros\"){\n          //1 metro = 1e+6 Micrômetros\n          numero = numero/1e+6;\n        }else if (medidaInit==\"Nanômetros\"){\n          //1 metro = 1e+9 Nanômetros\n          numero = numero/1e+9;\n        }else if (medidaInit==\"Milhas\"){\n          //1 metro = 0,000621371 Milhas\n          numero = numero*1609;\n        }else if (medidaInit==\"Jardas\"){\n          //1 metro = 1,09361 Jardas\n          numero = numero/1.094;\n        }else if (medidaInit==\"pés\"){\n          //1 metro = 3,28084 pés\n          numero = numero/3.281;\n        }else if (medidaInit==\"polegada\"){\n          //1 metro = 39,37008 polegada\n          numero = numero/39.37;\n        }else if (medidaInit==\"milha nautica\"){\n          //1 metro = 0,000539957 milha nautica\n          numero = numero*1852;\n        };\n        if (medidaFinal==\"Quilômetros\"){\n          //1 metro = 0,001 Quilômetros (divida o valor de comprimento por 1000)\n          numero = numero/1000;\n        }else if (medidaFinal==\"centimetros\"){\n          //1 metro = 100 centimetros (multiplique o valor de comprimento por 100)\n          numero = numero*100;\n        }else if (medidaFinal==\"Milímetros\"){\n          //1 metro = 1000 Milímetros (multiplique o valor de comprimento por 1000)\n          numero = numero*1000;\n        }else if (medidaFinal==\"Micrômetros\"){\n          //1 metro = 1e+6 Micrômetros (multiplique o valor de comprimento por 1e+6)\n          numero = numero*1e+6;\n        }else if (medidaFinal==\"Nanômetros\"){\n          //1 metro = 1e+9 Nanômetros (Multiplique o valor de comprimento por 1e+9)\n          numero = numero*1e+9;\n        }else if (medidaFinal==\"Milhas\"){\n          //1 metro = 0,000621371 Milhas (divida o valor de comprimento por 1609)\n          numero = numero/1609;\n        }else if (medidaFinal==\"Jardas\"){\n          //1 metro = 1,09361 Jardas (multiplique o valor de comprimento por 1,094)\n          numero = numero*1.094;\n        }else if (medidaFinal==\"pés\"){\n          //1 metro = 3,28084 pés (multiplique o valor de comprimento por 3,281)\n          numero = numero*3.281;\n        }else if (medidaFinal==\"polegada\"){\n          //1 metro = 39,37008 polegada (multiplique o valor de comprimento por 39,37)\n          numero = numero*39.37;\n        }else if (medidaFinal==\"milha nautica\"){\n          //1 metro = 0,000539957 milha nautica (divida o valor de comprimento por 1852)\n          numero = numero/1852;\n        };\n      }\n      document.getElementById('impMedidaPos').value = numero;\n    }\n  \n    return (\n      <div>\n        <select id=\"selMedidaPre\" name=\"selMedidaPre\" onChange={() => {converter()}}>\n                <option value=\"metros\">metros</option>\n                <option value=\"Quilômetros\">Quilômetros</option>\n                <option value=\"centimetros\">centimetros</option>\n                <option value=\"Milímetros\">Milímetros</option>\n                <option value=\"Micrômetros\">Micrômetros</option>\n                <option value=\"Nanômetros\">Nanômetros</option>\n                <option value=\"Milhas\">Milhas</option>\n                <option value=\"Jardas\">Jardas</option>\n                <option value=\"pés\">pés</option>\n                <option value=\"polegada\">polegada</option>\n                <option value=\"milha nautica\">milha nautica</option>\n        </select>\n        <input type=\"number\" id=\"impMedidaPre\" name=\"impMedidaPre\" required autofocus maxlength=\"20\"/><br/>\n        <br/>\n        <select id=\"selMedidaPos\" name=\"selMedidaPos\" onChange={() => {converter()}}>\n                <option value=\"metros\">metros</option>\n                <option value=\"Quilômetros\">Quilômetros</option>\n                <option value=\"centimetros\">centimetros</option>\n                <option value=\"Milímetros\">Milímetros</option>\n                <option value=\"Micrômetros\">Micrômetros</option>\n                <option value=\"Nanômetros\">Nanômetros</option>\n                <option value=\"Milhas\">Milhas</option>\n                <option value=\"Jardas\">Jardas</option>\n                <option value=\"pés\">pés</option>\n                <option value=\"polegada\">polegada</option>\n                <option value=\"milha nautica\">milha nautica</option>\n        </select>\n        <input type=\"number\" id=\"impMedidaPos\" name=\"impMedidaPos\" maxlength=\"20\"/><br/>\n      </div>\n    )\n  }else{\n    return (\n      <div>\n        Não é possivel executar o conversor de unidade no modo APM.<br/>\n        <a href=\"/utilitarios/conversordeunidade/\" >Sair do modo AMP.</a><br/>\n      </div>\n    )\n  }\n  \n}\n\nexport default orgTanque\n\n"]},"metadata":{},"sourceType":"module"}
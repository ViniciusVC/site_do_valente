{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSXStyle from \"styled-jsx/style\";\n// content do Documentoscopia - Projeto Piloto\nimport React from 'react'; //import BtLink from '../../atoms/atBtLink/index.js';\n\nimport TextoDestaque from './atTextoDestaque.js';\nimport BtSubmit from '../../atoms/atBtSubmit/index.js';\nimport AtCampoInvisivel from '../../atoms/atCampoInvisivel/index.js';\nimport EscolhaDoc from '../../moleculas/moEscolhaDoc.js';\n\nfunction soNumero(str) {\n  str = str.toString(); //return str.replace(/\\D/g, ”);\n\n  return str.replace(/[^0-9]/g, '');\n}\n\nfunction ValidaCPF(strCPF) {\n  var Soma;\n  var Resto;\n  Soma = 0;\n  if (strCPF == \"\") return false;\n  if (strCPF == \"00000000000\") return false;\n  var i;\n\n  for (i = 1; i <= 9; i++) {\n    Soma = Soma + _parseInt(strCPF.substring(i - 1, i)) * (11 - i);\n  }\n\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != _parseInt(strCPF.substring(9, 10))) return false;\n  Soma = 0;\n\n  for (i = 1; i <= 10; i++) {\n    Soma = Soma + _parseInt(strCPF.substring(i - 1, i)) * (12 - i);\n  }\n\n  Resto = Soma * 10 % 11;\n  if (Resto == 10 || Resto == 11) Resto = 0;\n  if (Resto != _parseInt(strCPF.substring(10, 11))) return false;\n  return true;\n} //import Img from '../../atoms/Imagem.js';\n// console.log('Instanciando /componentes/organisms/documentoscopia/ContentAbaB.js');\n\n\nvar ContentAbaB = function ContentAbaB(props) {\n  // var modo = \"html\";\n  // if(props.modo!=undefined){modo=props.modo};\n  //var camposValidados = true;\n  //var MenssagemValida = \" campos\";\n  var cpf = \"\";\n\n  if (props.query.cpf != undefined) {\n    cpf = soNumero(props.query.cpf);\n  }\n\n  ; //if(cpf!=\"\"){\n  //  camposValidados = false;\n  //};\n  // var nascimento = \"01-01-2000\";\n  // if(props.query.nascimento!=undefined && props.query.nascimento!=\"\"){\n  //   nascimento=props.query.nascimento;\n  // }else{\n  //   camposValidados = false;\n  //   MenssagemValida += \", data de nascimento \";\n  // };\n\n  if (ValidaCPF(cpf)) {\n    return React.createElement(\"div\", {\n      className: \"jsx-4165728291\"\n    }, React.createElement(\"h1\", {\n      className: \"jsx-4165728291\"\n    }, \"QUAL DOCUMENTO QUE VOC\\xCA QUER ENVIAR?\"), React.createElement(\"h2\", {\n      className: \"jsx-4165728291\"\n    }, \"Escolha uma das tr\\xEAs op\\xE7\\xF5es. Prefira uma que tenha o seu CPF.\"), React.createElement(\"div\", {\n      className: \"jsx-4165728291\" + \" \" + \"divTipoDocumento\"\n    }, React.createElement(EscolhaDoc, {\n      href: \"?cpf=\" + cpf + \"&tipoDocumento=identidade&passo=3\",\n      value: \"Carteira de identidade (RG)\",\n      nota: \"Selfie e Documento Frente e verso\"\n    })), React.createElement(\"div\", {\n      className: \"jsx-4165728291\" + \" \" + \"divTipoDocumento\"\n    }, React.createElement(EscolhaDoc, {\n      href: \"?cpf=\" + cpf + \"&tipoDocumento=cnh&passo=3\",\n      value: \"Carteira de Habilita\\xE7\\xE3o (CNH)\",\n      nota: \"Selfie/ Aberta/ Frente\"\n    })), React.createElement(\"div\", {\n      className: \"jsx-4165728291\" + \" \" + \"divTipoDocumento\"\n    }, React.createElement(EscolhaDoc, {\n      href: \"?cpf=\" + cpf + \"&tipoDocumento=outros&passo=3\",\n      value: \"Outros (OAB, Passaporte e etc)\",\n      nota: \"Selfie/ Aberta/ Frente\"\n    })), React.createElement(_JSXStyle, {\n      id: \"4165728291\"\n    }, [\"h1.jsx-4165728291{font-family:Simplon-Headline;font-size:24px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:normal;-webkit-letter-spacing:normal;-moz-letter-spacing:normal;-ms-letter-spacing:normal;letter-spacing:normal;color:#f96132;}\", \"h2.jsx-4165728291{font-family:SimplonBP-Regular;font-size:18px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:1.33;-webkit-letter-spacing:normal;-moz-letter-spacing:normal;-ms-letter-spacing:normal;letter-spacing:normal;color:#000000;}\", \".divTipoDocumento.jsx-4165728291{width:100%;margin-top:18px;}\"]));\n  } else {\n    return React.createElement(\"form\", {\n      action: \"/meusdocumentos/\",\n      method: \"get\",\n      id: \"formdocumentoscopia\",\n      name: \"formdocumentoscopia\",\n      encType: \"multipart/form-data\"\n    }, React.createElement(TextoDestaque, {\n      texto: \"Volte a etapa anterior e preencha o campo CPF corretamente.\"\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"cpf\",\n      name: \"cpf\",\n      value: cpf\n    }), React.createElement(AtCampoInvisivel, {\n      type: \"text\",\n      id: \"passo\",\n      name: \"passo\",\n      value: \"1\"\n    }), React.createElement(BtSubmit, {\n      value: \"Voltar\"\n    }));\n  }\n};\n\nexport default ContentAbaB; //<AtCampoInvisivel type=\"text\" id=\"nascimento\" name=\"nascimento\" value={nascimento}/>\n\n/*         <div className=\"grupodecampos\">\n            <ul type=\"1\" className=\"radio_ul\">\n\n              <li className=\"radio_li\">\n                <input className=\"radio_style\" type=\"radio\" name=\"identidade\" id=\"identidade\"/>\n                <label for=\"identidade\" className=\"radio_label\">\n                  <img className=\"imgradio\" id=\"imgidentidade\" src=\"../assetsv5/img/documentoscopia/radio.jpg\" />\n                  Carteira de identidade e CPF\n                </label>\n              </li>\n              <li className=\"radio_li\">\n                <input className=\"radio_style\" type=\"radio\" name=\"cnh\" id=\"cnh\"/>\n                <label for=\"cnh\" className=\"radio_label\">\n                  <img className=\"imgradio\" id=\"imgcnh\" src=\"../assetsv5/img/documentoscopia/radio.jpg\" />\n                  Carteira Habilitação(CNH)\n                </label>\n              </li>\n              <li className=\"radio_li\">\n                <input className=\"radio_style\" type=\"radio\" name=\"outros\" id=\"outros\"/>\n                <label for=\"outros\" className=\"radio_label\">\n                  <img className=\"imgradio\" id=\"imgoutros\" src=\"../assetsv5/img/documentoscopia/radio.jpg\"/>\n                  Outros(Passaporte e etc)\n                </label>\n              </li>\n            </ul>\n        </div>\n        <AtCampoInvisivel type=\"text\" id=\"cpf\" name=\"cpf\" value={cpf}/>\n        <AtCampoInvisivel type=\"text\" id=\"passo\" name=\"passo\" value=\"3\"/>\n        <BtSubmit value=\"Avançar\"/>\n*/","map":null,"metadata":{},"sourceType":"module"}
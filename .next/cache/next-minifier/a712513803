{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[\"fa13\"],{\"/uGD\":function(e,a,s){\"use strict\";s.r(a);var t=s(\"q1tI\"),o=s.n(t),r=s(\"MX0m\"),l=s.n(r),c=s(\"D4zN\"),m=s(\"uhj+\"),n=s(\"T9MM\"),i=s(\"h6+w\"),d=s(\"ob7O\"),u=s(\"JkDD\"),p=function(e){console.log(\"╔═══════════════════════════╗\"),console.log(\"║    Tutorial  sql       ║\"),console.log(\"╚═══════════════════════════╝\");var a=u.h(e.regiao,\"RJ\"),s=u.h(e.modo,\"html\");return o.a.createElement(\"div\",{className:\"jsx-1367375073\"},o.a.createElement(i.a,{modo:s,title:\"SQL\",description:\"SQL\",canonical:\"/tutorial/sql/\"}),o.a.createElement(n.a,{regiao:a,modo:s,titulo:\"Tutoriais\",categoria:\"Banco de Dados\"},o.a.createElement(m.a,{display:\"responcivo\"},o.a.createElement(\"div\",{className:\"jsx-1367375073 coluna404\"},o.a.createElement(\"h1\",{className:\"jsx-1367375073\"},\"SQL\"),o.a.createElement(\"h3\",{className:\"jsx-1367375073\"},\"O que é SQL?\"),o.a.createElement(\"p\",{className:\"jsx-1367375073\"},\"SQL, ou Structured Query Language, ou Linguagem de Consulta Estruturada, é a linguagem de pesquisa declarativa padrão para banco de dados relacional (base de dados relacional). As características originais do SQL foram inspiradas na álgebra relacional.\"),o.a.createElement(\"h3\",{className:\"jsx-1367375073\"},\"A linguagem:\"),o.a.createElement(d.a,{titulo:\"Adicionar um novo registro\"},\"Insert Into clientes  (nome, sobrenomes, endereço, cidade, código postal, e-mail, pedidos) Values ('Pedro', 'Palotes', 'Percebe n°13', 'Londrina', '123456', 'pedro@criarweb.com', 33)\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),\"Insert Into nome_tabela (nome_campo1, nome_campo2,...) Values (valor_campo1, valor_campo2...)\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Apagar um registro\"},\"Delete From nome_tabela Where condicoes_de_selecao\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Atualizar um registro\"},\"Update clientes Set nome='José' Where nome='Pedro' \",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),\"Update nome_tabela Set nome_campo1 = valor_campo1, nome_campo2 = valor_campo2,... Where condicoes_de_selecao\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Seleção de tabelas I:\"},\"Select * From clientes\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Mostrar os clientes da cidade 'Rio de janeiro':\"},\"Select * From clientes Where cidade Like 'Rio de janeiro'\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Ordenar o resultado pelo campo nome:\"},\"Select * From clientes Where cidade Like 'Rio de janeiro' Order By nome\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"Ordenar o resultado pelos campos nome e sobrenome:\"},\"Select * From clientes Where cidade Like 'Rio de Janeiro' Order By nome, sobrenome\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"É possível também usar ordem inversa:\"},\"Select * From clientes Order By pedidos Decres\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Uma opção interessante é a de efetuar seleções sem coincidência. Se por exemplo, \",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"buscássemos saber em que cidades se encontram nossos clientes sem a necessidade de que para isso apareça várias vezes a mesma cidade,\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"usaríamos uma sentença desta classe:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"seleções sem coincidência:\"},\"Ex.: Select Distinct cidade From clientes Order By cidade \",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Nesta sentença selecionamos todos os clientes de Salvador cujo nome não seja Jose.\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Como se pode ver, empregamos Like ao invés de = simplesmente para evitar inconvenientes devido ao emprego ou não de maiúsculas.\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select * From clientes Where cidade Like 'salvador' And Not nome Like 'Jose'\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Se quiséssemos recolher em uma seleção aos clientes de nossa tabela cujo sobrenome começa por A e cujo número de pedidos esteja compreendido entre 20 e 40:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select * From clientes Where sobrenomes like 'A%' And pedidos Between 20 And 40\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"O operador In, será visto mais adiante, é muito prático para consultas em várias tabelas. Para casos em uma única tabela é empregada da seguinte forma:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select * From clientes Where cidade In ('Salvador','Fortaleza','Florianopolis') \",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Select em varias tabelas:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select clientes.sobrenomes, clientes.email From clientes,pedidos Where pedidos.data like '25/02/00' And pedidos.id_cliente= clientes.id_cliente\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Select pedidos.id_pedido, artigos.titulo From pedidos, artigos Where pedidos.id_artigo=artigos.id_artigo \",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Dado que o campo da função não existe no banco de dados, pois o estamos gerando virtualmente, isto pode criar inconvenientes quando estivermos trabalhando com nossos scripts na hora de tratar seu valor e seu nome de campo. É por isso que o valor da função tem que ser recuperada a partir de um apelido que nós especificaremos na sentença SQL a partir da instrução AS. A coisa poderia ficar assim:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select Soma(total) As soma_pedidos From pedidos\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"A partir desta sentença calculamos a soma dos valores de todos os pedidos realizados e armazenamos esse valor em um campo virtual chamado soma_pedidos que poderá ser utilizado como qualquer outro campo por nossas páginas dinâmicas.\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Obviamente, tudo que foi visto até agora pode ser aplicado neste tipo de funções de modo que, por exemplo, podemos estabelecer condições com a cláusula Where construindo sentenças como esta:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select Soma(quantidade) as soma_artigos From pedidos Where id_artigo=6\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Isto nos proporcionaria a quantidade de exemplares de um determinado livro que foram vendidos.\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Outra propriedade interessante destas funções é que permitem realizar operações com vários campos dentro de um mesmo parênteses:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select Avg(total/quantidade) From pedidos\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Esta sentença dá como resultado o preço médio que estão sendo vendidos os livros. Este resultado não tem porquê coincidir com o do preço médio dos livros presentes no inventário, já que, pode ser que as pessoas tenham tendência a comprar os livros caros ou os baratos:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select Avg(precio) as preco_venda From artigos\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Uma cláusula interessante no uso das funções é Group By. Esta cláusula nos permite agrupar registros aos quais vamos aplicar a função. Podemos por exemplo calcular o dinheiro gastado por cada cliente:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"select id_cliente, Soma(total) as soma_pedidos From pedidos Group By id_cliente\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"})),o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),\"Ou saber o número de pedidos que foram realizados:\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}),o.a.createElement(d.a,{titulo:\"SQL:\"},\"Select id_cliente, Count(*) as numero_pedidos From pedidos Group By id_cliente\",o.a.createElement(\"br\",{className:\"jsx-1367375073\"}))),o.a.createElement(\"div\",{className:\"jsx-1367375073\"},o.a.createElement(c.a,{src:\"/static/assetsv5/img/codigo/logosql.svg\",width:\"200px\",height:\"200px\",alt:\"Logo sql\",title:\"Logo sql\",class:\"ClassLogosql\",modo:s})))),o.a.createElement(l.a,{id:\"1367375073\"},[\".h1.jsx-1367375073{color :#000000;}\",\".p.jsx-1367375073{color :#000000;}\"]))};a.default=function(e){return o.a.createElement(p,{modo:\"html\",regiao:u.h(e.url.query.regiao,\"RJ\")})}},oRg9:function(e,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/routes/tutorial/bancodedados/sql\",function(){var e=s(\"/uGD\");return{page:e.default||e}}])}},[[\"oRg9\",\"5d41\",\"9da1\"]]]);"}